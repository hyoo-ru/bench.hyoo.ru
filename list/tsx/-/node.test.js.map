{"version":3,"sources":["../../../../../mol/mol.ts","../../../../../mol/mol.jam.js","../../../../../mol/mol.node.jam.js","../../../../../node/node.node.ts","../../../../../mol/dom/context/context.ts","../../../../../mol/dom/context/context.node.ts","../../../../../mol/type/partial/deep/deep.js","../../../../../mol/jsx/jsx.ts","../../../../../mol/jsx/jsx d.js","../../../../../mol/fail/fail.ts","../../../../../mol/dom/render/children/children.ts","../../../../../mol/jsx/make/make.ts","../../../../../mol/ambient/ambient.ts","../../../../../mol/owning/owning.ts","../../../../../mol/fail/hidden/hidden.ts","../../../../../mol/object2/object2.ts","../../../../../mol/jsx/view/view.tsx","../../../../../mol/jsx/attach/attach.ts","../index.tsx","../../../../../mol/exec/exec.node.ts","../../../../../mol/type/assert/assert.js","../../../../../mol/type/assert/assert.test.js","../../../../../mol/type/partial/deep/deep.test.js","../../../../../mol/log/log.ts","../../../../../mol/log/log_group.ts","../../../../../mol/log/log_context.ts","../../../../../mol/log/log_debug.node.ts","../../../../../mol/log/log_filter.node.ts","../../../../../mol/test/test.test.ts","../../../../../mol/assert/assert.ts","../../../../../mol/assert/assert.test.ts","../../../../../mol/jsx/make/make.test.tsx","../../../../../mol/dom/parse/parse.ts","../../../../../mol/jsx/attach/attach.test.tsx","../../../../../mol/wrapper/wrapper.ts","../../../../../mol/wrapper/wrapper.test.ts","../../../../../mol/dev/format/format.ts","../../../../../mol/maybe/maybe.ts","../../../../../mol/maybe/maybe.test.ts","../../../../../mol/log2/log2.ts","../../../../../mol/log2/log2.test.ts","../../../../../mol/after/mock/mock.test.ts","../../../../../mol/after/tick/tick.ts","../../../../../mol/after/tick/tick.test.ts","../../../../../mol/compare/any/any.ts","../../../../../mol/compare/any/any.test.ts","../../../../../mol/conform/conform.ts","../../../../../mol/conform/conform.test.ts","../../../../../mol/array/trim/trim.ts","../../../../../mol/array/trim/trim.test.ts","../../../../../mol/fiber/fiber.ts","../../../../../mol/fiber/fiber.test.ts","../../../../../mol/object/object.ts","../../../../../mol/object/object.test.ts","../../../../../mol/after/timeout/timeout.ts","../../../../../mol/after/timeout/timeout.test.ts","../../../../../mol/after/frame/frame.node.ts","../../../../../mol/after/frame/frame.test.ts","../../../../../mol/atom2/atom2.ts","../../../../../mol/atom2/atom2.test.ts","../../../../../mol/mem/force/force.ts","../../../../../mol/defer/defer.ts","../../../../../mol/mem/mem.ts","../../../../../mol/mem/mem.test.ts","../../../../../mol/const/const.ts","../../../../../mol/const/const.test.ts","../../../../../mol/atom2/field/field.ts","../../../../../mol/atom2/autorun/autorun.ts","../../../../../mol/atom2/autorun/autorun.test.ts","../../../../../mol/jsx/view/view.test.tsx","../../../../../mol/type/equals/equals.js","../../../../../mol/type/equals/equals.test.js","../../../../../mol/compare/deep/deep.ts","../../../../../mol/compare/deep/deep.test.tsx","../../../../../mol/diff/path/path.ts","../../../../../mol/diff/path/path.test.ts","../../../../../mol/error/mix/mix.ts"],"names":[],"mappings":"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","file":"node.test.js","sourcesContent":["declare namespace $ {}\nexport = $\nmodule.exports\n",null,null,"interface $node {\n\t[key:string]: any\n}\n\nvar $node = new Proxy( {} as any , { get( target , name : string , wrapper ) {\n\n\tconst path = require( 'path' ) as typeof import( 'path' )\n\tconst fs = require( 'fs' ) as typeof import( 'fs' )\n\tconst mod = require( 'module' ) as typeof import( 'module' )\n\n\tif( mod.builtinModules.indexOf( name ) >= 0 ) return require( name )\n\n\tlet dir = path.resolve( '.' )\n\tconst suffix = `./node_modules/${ name }`\n\t\n\twhile( !fs.existsSync( path.join( dir , suffix ) ) ) {\n\n\t\tconst parent = path.resolve( dir , '..' )\n\n\t\tif( parent === dir ) {\n\n\t\t\t$.$mol_exec( '.' , 'npm' , 'install' , name )\n\t\t\t\n\t\t\ttry {\n\t\t\t\t$.$mol_exec( '.' , 'npm' , 'install' , '@types/' + name )\n\t\t\t} catch {}\n\n\t\t\tbreak\n\n\t\t} else {\n\n\t\t\tdir = parent\n\n\t\t}\n\n\t}\n\t\n\treturn require( name )\n\n} } ) as $node\n","namespace $ {\n\t\n\texport var $mol_dom_context : typeof globalThis\n\t\n}\n","namespace $ {\n\t\n\t$mol_dom_context = new $node.jsdom.JSDOM( '' , { url : 'https://localhost/' } ).window as any\n\t\n}\n",null,"namespace $ {\n\n\texport let $mol_jsx_prefix = ''\n\n\texport let $mol_jsx_booked = null as null | Set< string >\n\t\n\texport let $mol_jsx_document : JSX.ElementClass['ownerDocument'] = {\n\t\tgetElementById : ()=> null ,\n\t\tcreateElement : ( name : string )=> $mol_dom_context.document.createElement( name )\n\t}\n\n}\n",null,"namespace $ {\n\n\texport function $mol_fail( error : any ) : never {\n\t\tthrow error\n\t}\n\n}\n","namespace $ {\n\n\texport function $mol_dom_render_children (\n\t\tel : Element ,\n\t\tchildNodes : NodeList | Array< Node | string | null >\n\t) {\n\t\tconst node_set = new Set< Node | string | null >( childNodes )\n\t\t\n\t\tlet nextNode : Node | null = el.firstChild\n\t\tfor( let view of childNodes ) {\n\n\t\t\tif( view == null ) continue\n\n\t\t\tif( view instanceof $mol_dom_context.Node ) {\n\t\t\t\t\n\t\t\t\twhile( true ) {\n\t\t\t\t\tif( !nextNode ) {\n\t\t\t\t\t\tel.appendChild( view )\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\tif( nextNode == view ) {\n\t\t\t\t\t\tnextNode = nextNode.nextSibling\n\t\t\t\t\t\tbreak\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif( node_set.has( nextNode ) ) {\n\t\t\t\t\t\t\tel.insertBefore( view , nextNode )\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst nn = nextNode.nextSibling\n\t\t\t\t\t\t\tel.removeChild( nextNode )\n\t\t\t\t\t\t\tnextNode = nn\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\tif( nextNode && nextNode.nodeName === '#text' ) {\n\t\t\t\t\tconst str = String( view )\n\t\t\t\t\tif( nextNode.nodeValue !== str ) nextNode.nodeValue = str\n\t\t\t\t\tnextNode = nextNode.nextSibling\n\t\t\t\t} else {\n\t\t\t\t\tconst textNode = $mol_dom_context.document.createTextNode( String( view ) )\n\t\t\t\t\tel.insertBefore( textNode , nextNode )\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\twhile( nextNode ) {\n\t\t\tconst currNode = nextNode\n\t\t\tnextNode = currNode.nextSibling\n\t\t\tel.removeChild( currNode )\n\t\t}\n\t}\n\n}\n","namespace $ {\n\n\texport function $mol_jsx_make< Props extends { id? : string } , Children extends Array< Node | string > >(\n\t\tElem : string\n\t\t\t| ( ( props : Props , ... children : Children ) => Element )\n\t\t\t| typeof $mol_jsx_view ,\n\t\tprops : Props ,\n\t\t... childNodes : Children\n\t) : Element {\n\n\t\tconst id = props && props.id || ''\n\n\t\tif( $mol_jsx_booked ) {\n\t\t\tif( $mol_jsx_booked.has( id ) ) {\n\t\t\t\t$mol_fail( new Error( `JSX already has tag with id ${ JSON.stringify( id ) }` ) )\n\t\t\t} else {\n\t\t\t\t$mol_jsx_booked.add( id )\n\t\t\t}\n\t\t}\n\n\t\tconst guid = $mol_jsx_prefix + id\n\n\t\tlet node = guid && $mol_jsx_document.getElementById( guid )\n\n\t\tif( typeof Elem !== 'string' ) {\n\n\t\t\tif( Elem.prototype ) {\n\n\t\t\t\tconst view : $mol_jsx_view = node && node[ Elem as any ] || new ( Elem as any )\n\t\t\t\t\n\t\t\t\tObject.assign( view , props )\n\t\t\t\tview[ Symbol.toStringTag ] = guid\n\t\t\t\t\n\t\t\t\tview.childNodes = childNodes\n\t\t\t\t\n\t\t\t\tif( !view.ownerDocument ) view.ownerDocument = $mol_jsx_document\n\t\t\t\t\n\t\t\t\tnode = view.valueOf()\n\t\t\t\t\n\t\t\t\tnode[ Elem as any ] = view\n\t\t\t\t\n\t\t\t\treturn node\n\n\t\t\t} else {\n\n\t\t\t\tconst prefix = $mol_jsx_prefix\n\t\t\t\tconst booked = $mol_jsx_booked\n\t\t\t\t\n\t\t\t\ttry {\n\t\n\t\t\t\t\t$mol_jsx_prefix = guid\n\t\t\t\t\t$mol_jsx_booked = new Set\n\t\n\t\t\t\t\treturn ( Elem as any )( props , ... childNodes )\n\t\t\t\t\t\n\t\t\t\t} finally {\n\n\t\t\t\t\t$mol_jsx_prefix = prefix\n\t\t\t\t\t$mol_jsx_booked = booked\n\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\n\t\t}\n\n\t\tif( !node ) node = $mol_jsx_document.createElement( Elem )\n\n\t\t$mol_dom_render_children( node , ( [] as ( Node | string )[] ).concat( ... childNodes ) )\n\n\t\tfor( const key in props ) {\n\n\t\t\tif( typeof props[ key ] === 'string' ) {\n\n\t\t\t\tnode.setAttribute( key , props[ key as any ] )\n\n\t\t\t} else if( props[ key ] && props[ key ]['constructor'] === Object ) {\n\n\t\t\t\tif( typeof node[ key as any ] === 'object' ) {\n\t\t\t\t\tObject.assign( ( node as any )[ key ] , props[ key ] )\n\t\t\t\t\tcontinue\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tnode[ key as any ] = props[ key ]\n\n\t\t}\n\n\t\tif( guid ) node.id = guid\n\n\t\treturn node\n\n\t}\n\n}\n","namespace $ {\n\n\texport namespace $$ { export let $$ : typeof $ }\n\n\texport const $mol_ambient_ref : unique symbol = Symbol( '$mol_ambient_ref' )\n\n\texport type $mol_ambient_context = ( typeof globalThis ) & ( typeof $.$$ ) & ( typeof $ )\n\n\texport function $mol_ambient( this : $mol_ambient_context | void , overrides : Partial< $mol_ambient_context > ) : $mol_ambient_context {\n\t\treturn Object.setPrototypeOf( overrides , this || $ )\n\t}\n\n}\n","namespace $ {\n\n\texport const $mol_owning_map = new WeakMap< any , any >()\n\n\texport function $mol_owning_allow< Having >(\n\t\thaving : Having ,\n\t) : having is Having & {\n\t\tdestructor() : void\n\t} {\n\t\tif( !having ) return false\n\t\tif( typeof having !== 'object' ) return false\n\t\tif( typeof having['destructor'] !== 'function' ) return false\n\t\treturn true\n\t}\n\n\texport function $mol_owning_get< Having , Owner extends object >( having : Having , Owner? : { new() : Owner } ) : Owner | null {\n\t\n\t\tif( !$mol_owning_allow( having ) ) return null\n\n\t\twhile( true ) {\n\n\t\t\tconst owner = $mol_owning_map.get( having )\n\t\t\tif( !owner ) return owner\n\t\t\tif( !Owner ) return owner\n\t\t\t\n\t\t\tif( owner instanceof Owner ) return owner\n\n\t\t\thaving = owner\n\t\t}\n\n\t}\n\t\n\texport function $mol_owning_check< Owner , Having >(\n\t\towner : Owner ,\n\t\thaving : Having ,\n\t) : having is Having & { destructor() : void } {\n\t\tif( !$mol_owning_allow( having ) ) return false\n\t\tif( $mol_owning_map.get( having ) !== owner ) return false\n\t\treturn true\n\t}\n\t\n\texport function $mol_owning_catch< Owner , Having >(\n\t\towner : Owner ,\n\t\thaving : Having ,\n\t) {\n\t\tif( !$mol_owning_allow( having ) ) return false\n\t\tif( $mol_owning_map.get( having ) ) return false\n\n\t\t$mol_owning_map.set( having , owner )\n\t\treturn true\n\t}\n\n}\n","namespace $ {\n\n\texport function $mol_fail_hidden( error : any ) : never {\n\t\tthrow error /// Use 'Never Pause Here' breakpoint in DevTools or simply blackbox this script\n\t}\n\n}\n","namespace $ {\n\n\texport class $mol_object2 extends Object {\n\t\t\n\t\tstatic $ = $ as $mol_ambient_context\n\t\t\n\t\t[ $mol_ambient_ref ] = null as any as $mol_ambient_context\n\t\tget $() {\n\t\t\tif( this[ $mol_ambient_ref ] ) return this[ $mol_ambient_ref ]\n\t\t\tconst owner = $mol_owning_get( this ) as any\n\t\t\treturn this[ $mol_ambient_ref ] = owner?.$ || $mol_object2.$ as $mol_ambient_context\n\t\t}\n\t\tset $( next : $mol_ambient_context ) {\n\t\t\tif( this[ $mol_ambient_ref ] ) $mol_fail_hidden( new Error( 'Context already defined' ) )\n\t\t\tthis[ $mol_ambient_ref ] = next\n\t\t}\n\n\t\tconstructor( init? : ( obj : any )=> void ) {\n\t\t\tsuper()\n\t\t\tif( init ) init( this )\n\t\t}\n\n\t\tpublic static create< Instance >(\n\t\t\tthis : new( init? : ( instance : any )=> void )=> Instance ,\n\t\t\tinit? : ( instance : Instance )=> void\n\t\t) : Instance {\n\t\t\treturn new this( init )\n\t\t}\n\t\t\n\t\tstatic toString() { return this[ Symbol.toStringTag ] || this.name }\n\n\t\tdestructor() { }\n\n\t\ttoString() {\n\t\t\treturn this[ Symbol.toStringTag ] || this.constructor.name + '()'\n\t\t}\n\t\t\n\t\ttoJSON() {\n\t\t\treturn this.toString()\n\t\t}\n\n\t}\n\n}\n","/** @jsx $mol_jsx_make */\nnamespace $ {\n\n\texport class $mol_jsx_view extends $mol_object2 {\n\n\t\tstatic of< This extends typeof $mol_jsx_view >( this : This , node : Element ) {\n\t\t\treturn node[ this as any ] as InstanceType< This >\n\t\t}\n\t\t\n\t\t[ Symbol.toStringTag ] : string\n\t\t\n\t\tattributes! : Partial< Pick< this , Exclude< keyof this , 'valueOf' > > >\n\t\townerDocument! : typeof $mol_jsx_document\n\t\tchildNodes! : Array< Node | string >\n\t\t\n\t\tvalueOf() {\n\t\t\t\n\t\t\tconst prefix = $mol_jsx_prefix\n\t\t\tconst booked = $mol_jsx_booked\n\t\t\tconst document = $mol_jsx_document\n\t\t\t\n\t\t\ttry {\n\t\t\t\t\n\t\t\t\t$mol_jsx_prefix = this[ Symbol.toStringTag ]\n\t\t\t\t$mol_jsx_booked = new Set\n\t\t\t\t$mol_jsx_document = this.ownerDocument\n\n\t\t\t\treturn this.render()\n\n\t\t\t} finally {\n\n\t\t\t\t$mol_jsx_prefix = prefix\n\t\t\t\t$mol_jsx_booked = booked\n\t\t\t\t$mol_jsx_document = document\n\n\t\t\t}\n\n\t\t}\n\t\t\n\t\trender() : HTMLElement {\n\t\t\treturn $mol_fail( new Error( 'dom_tree() not implemented' ) )\n\t\t}\n\n\t}\n\n}\n","namespace $ {\n\n\texport function $mol_jsx_attach< Result >( next : typeof $mol_jsx_document , action : ()=> Result ) {\n\t\tconst prev = $mol_jsx_document\n\t\ttry {\n\t\t\t$mol_jsx_document = next\n\t\t\treturn action()\n\t\t} finally {\n\t\t\t$mol_jsx_document = prev\n\t\t}\n\t}\n\n}\n","/** @jsx $mol_jsx_make */\nnamespace $ {\n\n\texport class $hyoo_bench_list_tsx_item extends $mol_jsx_view {\n\t\t\n\t\ttitle = ''\n\t\tcontent = ''\n\t\tselected = false\n\n\t\tonSelect() {}\n\n\t\trender() { return (\n\t\t\t<div\n\t\t\t\tclassList={[ `list-item list-item-selected-${ this.selected }` ]}\n\t\t\t\tonclick={ ()=> this.onSelect() }\n\t\t\t\t>\n\t\t\t\t<div\n\t\t\t\t\tid=\"/title\"\n\t\t\t\t\tclassList={[ 'list-item-title' ]}\n\t\t\t\t\t>\n\t\t\t\t\t{ this.title }\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tid=\"/content\"\n\t\t\t\t\tclassList={[ 'list-item-content' ]}\n\t\t\t\t\t>\n\t\t\t\t\t{ this.content }\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t) }\n\n\t}\n\n\texport class $hyoo_bench_list_tsx extends $mol_jsx_view {\n\n\t\tstatic render( props : Pick< $hyoo_bench_list_tsx , 'data' | 'selected' > ) {\n\t\t\treturn $mol_jsx_attach( $mol_dom_context.document , ()=> <this id=\"/list\" { ...props } /> )\n\t\t}\n\n\t\tdata = {\n\t\t\tsample : '' ,\n\t\t\titems : [] as {\n\t\t\t\tid : number\n\t\t\t\ttitle : string\n\t\t\t\tcontent : string\n\t\t\t}[]\t\n\t\t}\t\n\t\t\n\t\tselected = Number.NaN\n\t\t\n\t\tonItemSelect( item : { id : number } ) {\n\t\t\tthis.selected = item.id\n\t\t\tthis.valueOf() // force rerender\n\t\t}\n\n\t\trender() { return (\n\t\t\t<div classList={[ 'list' ]} >\n\t\t\t\t{ ... this.data.items.map( item => (\n\t\t\t\t\t<$hyoo_bench_list_tsx_item\n\t\t\t\t\t\tid={ '/item:' + item.id }\n\t\t\t\t\t\ttitle={ item.title }\n\t\t\t\t\t\tcontent={ item.content }\n\t\t\t\t\t\tselected={ item.id === this.selected }\n\t\t\t\t\t\tonSelect={ ()=> this.onItemSelect( item ) }\n\t\t\t\t\t/>\n\t\t\t\t) ) }\n\t\t\t</div>\n\t\t) }\n\n\t}\n\n}\n","namespace $ {\n\texport function $mol_exec( dir : string , command : string , ...args : string[] ) {\n\n\t\tlet [ app , ... args0 ] = command.split( ' ' )\n\t\targs = [ ... args0 , ... args ]\n\n\t\tconsole.info( `${ $node.colorette.gray( $node.path.relative( '' , dir ) ) }> ${ $node.colorette.blue( app ) } ${ $node.colorette.cyan( args.join( ' ' ) ) }` )\n\n\t\tvar res = $node['child_process'].spawnSync(\n\t\t\tapp ,\n\t\t\targs,\n\t\t\t{\n\t\t\t\tcwd : $node.path.resolve( dir ) ,\n\t\t\t\tshell : true ,\n\t\t\t}\n\t\t)\n\t\t\n\t\tif( res.status || res.error ) return $mol_fail( res.error || new Error( res.stderr.toString() ) )\n\t\tif( !res.stdout ) res.stdout = new Buffer('')\n\n\t\treturn res\n\t}\n}\n",null,null,null,"namespace $ {\n\n\texport function $mol_log( path : any , ... values : any[] ) {\n\t\t\n\t\tif( $mol_log_filter() == null ) return\n\t\t\n\t\tpath = String( path )\n\t\tif( path.indexOf( $mol_log_filter() ) === -1 ) return\n\t\t\n\t\tconst context = $mol_log_context()\n\t\tif( context ) context()\n\t\t\n\t\tconsole.debug( path , ... values )\n\n\t\tif( $mol_log_debug() == null ) return\n\t\tif( path.indexOf( $mol_log_debug() ) === -1 ) return\n\t\t\n\t\tdebugger\n\t}\n\t\n}\n","namespace $ {\n\n\texport function $mol_log_group< Task extends Function , This >( name : string , task : Task ) {\n\t\t\n\t\tconst filter = $mol_log_filter()\n\t\tif( filter == null ) return task\n\n\t\treturn function $mol_log_group_wrapper( this : This , ... args : any [] ) {\n\n\t\t\tlet started = false\n\t\t\tlet prev = $mol_log_context()\n\n\t\t\t$mol_log_context( ()=> {\n\t\t\t\tif( prev ) prev()\n\t\t\t\tstarted = true\n\n\t\t\t\tif( filter || prev ) console.group( name )\n\t\t\t\telse console.groupCollapsed( name )\n\n\t\t\t\t$mol_log_context( prev = null )\n\t\t\t} )\n\t\t\t\n\t\t\ttry {\n\t\t\t\treturn task.apply( this , args )\n\t\t\t} finally {\n\t\t\t\tif( started ) console.groupEnd()\n\t\t\t\t$mol_log_context( prev )\n\t\t\t}\n\n\t\t} as any as Task\n\n\t}\n\n}\n","namespace $ {\n\n\tlet context = null as null | ( ()=> void )\n\texport function $mol_log_context( next = context ) {\n\t\treturn context = next\n\t}\n\n}\n","namespace $ {\n\n\tlet debug : ()=> void\n\texport function $mol_log_debug( next = debug ) {\n\t\treturn debug = next\n\t}\n\n}\n","namespace $ {\n\n\tlet filter : null | string\n\texport var $mol_log_filter = function $mol_log_filter( next = filter ) {\n\t\treturn filter = next\n\t}\n\n}\n","namespace $ {\n\n\texport namespace $$ { let $ }\n\t\n\texport function $mol_test( set : { [ name : string ] : string | ( ( context : $mol_ambient_context )=> void ) } ) {\n\t\t\n\t\tfor( let name in set ) {\n\n\t\t\tconst code = set[ name ]\n\t\t\tconst test = ( typeof code === 'string' ) ? new Function( '' , code ) as ()=> void : code\n\t\t\t\n\t\t\t$mol_test_all.push( $mol_log_group( name , test ) )\n\t\t}\n\n\t\t$mol_test_schedule()\n\t}\n\n\texport let $mol_test_mocks = [] as Array< ( context : $mol_ambient_context )=> void >\n\n\texport const $mol_test_all = [] as Array< ( context : $mol_ambient_context )=> void >\n\n\texport async function $mol_test_run() {\n\n\t\tfor( var test of $mol_test_all ) {\n\n\t\t\tlet context = Object.create( $$ )\n\t\t\tfor( let mock of $mol_test_mocks ) await mock( context )\n\t\t\t\n\t\t\tawait test( context )\n\t\t}\n\t\t\n\t\tconsole.info( '$mol_test completed' , $mol_test_all.length )\n\t}\n\t\n\tlet scheduled = false\n\texport function $mol_test_schedule() {\n\n\t\tif( scheduled ) return\n\t\tscheduled = true\n\n\t\tsetTimeout( $mol_log_group( '$mol_test' , ()=> {\n\t\t\tscheduled = false\n \t\t\t$mol_test_run()\n\t\t} ) , 500 )\n\t\t\n\t}\n\n\n\t$mol_test_mocks.push( context => {\n\t\tlet seed = 0\n\n\t\tcontext.Math = Object.create( Math )\n\t\tcontext.Math.random = ()=> Math.sin( seed++ )\n\n\t\tconst forbidden = [ 'XMLHttpRequest' , 'fetch' ]\n\n\t\tfor( let api of forbidden ) {\n\t\t\tcontext[ api ] = new Proxy( function(){} , {\n\t\t\t\tget() {\n\t\t\t\t\t$mol_fail_hidden( new Error( `${ api } is forbidden in tests` ) )\n\t\t\t\t} ,\n\t\t\t\tapply() {\n\t\t\t\t\t$mol_fail_hidden( new Error( `${ api } is forbidden in tests` ) )\n\t\t\t\t} ,\n\t\t\t} )\n\t\t}\n\t\t\n\t} )\n\n\t$mol_test({\n\n\t\t'mocked Math.random'( $ ) {\n\t\t\tconsole.assert( $.Math.random() === 0 )\n\t\t\tconsole.assert( $.Math.random() === Math.sin(1) )\n\t\t} ,\n\n\t\t'forbidden XMLHttpRequest'( $ ) {\n\t\t\ttry {\n\t\t\t\tconsole.assert( void new $.XMLHttpRequest )\n\t\t\t} catch( error ) {\n\t\t\t\tconsole.assert( error.message === 'XMLHttpRequest is forbidden in tests' )\n\t\t\t}\n\t\t} ,\n\n\t\t'forbidden fetch'( $ ) {\n\t\t\ttry {\n\t\t\t\tconsole.assert( void $.fetch('') )\n\t\t\t} catch( error ) {\n\t\t\t\tconsole.assert( error.message === 'fetch is forbidden in tests' )\n\t\t\t}\n\t\t} ,\n\n\t})\n\t\n}\n","namespace $ {\n\t\n\texport function $mol_assert_ok( value : any ) {\n\t\tif( value ) return\n\t\t$mol_fail( new Error( `${value} ≠ true` ) )\n\t}\n\t\n\texport function $mol_assert_not( value : any ) {\n\t\tif( !value ) return\n\t\t$mol_fail( new Error( `${value} ≠ false` ) )\n\t}\n\t\n\texport function $mol_assert_fail( handler : ()=> any , ErrorRight? : any ) {\n\t\t\n\t\tconst fail = $.$mol_fail\n\t\t\n\t\ttry {\n\t\t\t$.$mol_fail = $.$mol_fail_hidden\n\t\t\t\n\t\t\thandler()\n\n\t\t} catch( error ) {\n\t\t\t\n\t\t\tif( !ErrorRight ) return error\n\t\t\t\n\t\t\tif( typeof ErrorRight === 'string' ) {\n\t\t\t\tif( error.message !== ErrorRight ) throw error\n\t\t\t} else {\n\t\t\t\tif(!( error instanceof ErrorRight )) throw error\n\t\t\t}\n\t\t\t\n\t\t\treturn error\n\n\t\t} finally {\n\t\t\t$.$mol_fail = fail\n\t\t}\n\n\t\t$mol_fail( new Error( 'Not failed' ) )\n\t}\n\t\n\texport function $mol_assert_equal< Value >( ... args : Value[] ) {\n\t\tfor( let i = 0 ; i < args.length ; ++i ) {\n\t\t\tfor( let j = 0 ; j < args.length ; ++j ) {\n\t\t\t\tif( i === j ) continue\n\t\t\t\tif( Number.isNaN( args[i] as any as number ) && Number.isNaN( args[j] as any as number ) ) continue\n\t\t\t\tif( args[i] !== args[j] ) $mol_fail( new Error( `Not equal\\n${ args[i] }\\n${ args[j] }` ) )\n\t\t\t}\n\t\t}\n\t}\n\t\n\texport function $mol_assert_unique( ... args : any[] ) {\n\t\tfor( let i = 0 ; i < args.length ; ++i ) {\n\t\t\tfor( let j = 0 ; j < args.length ; ++j ) {\n\t\t\t\tif( i === j ) continue\n\t\t\t\tif( args[i] === args[j] || ( Number.isNaN( args[i] as any as number ) && Number.isNaN( args[j] as any as number ) ) ) {\n\t\t\t\t\t$mol_fail( new Error( `args[${ i }] = args[${ j }] = ${ args[i] }` ) )\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\texport function $mol_assert_like< Value >( head : Value , ... tail : Value[] ) {\n\t\tfor( let value of tail ) {\n\n\t\t\tif( $mol_compare_deep( value , head ) ) {\n\t\t\t\thead = value\n\t\t\t} else {\n\n\t\t\t\tconst print = ( val : any ) => {\n\t\t\t\t\tif( !val ) return val\n\t\t\t\t\tif( typeof val !== 'object' ) return val\n\t\t\t\t\tif( 'outerHTML' in val ) return val.outerHTML\n\t\t\t\t\treturn val\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn $mol_fail( new Error( `Not like\\n${ print( head ) }\\n---\\n${ print( value ) }` ) )\n\n\t\t\t}\n\n\t\t}\n\t}\n\t\n}\n","namespace $ {\n\t$mol_test( {\n\t\t\n\t\t'must be false'() {\n\t\t\t$mol_assert_not( 0 )\n\t\t} ,\n\t\t\n\t\t'must be true'() {\n\t\t\t$mol_assert_ok( 1 )\n\t\t} ,\n\t\t\n\t\t'two must be equal'() {\n\t\t\t$mol_assert_equal( 2 , 2 )\n\t\t} ,\n\t\t\n\t\t'three must be equal'() {\n\t\t\t$mol_assert_equal( 2 , 2 , 2 )\n\t\t} ,\n\t\t\n\t\t'two must be unique'() {\n\t\t\t$mol_assert_unique( [ 3 ] , [ 3 ] )\n\t\t} ,\n\t\t\n\t\t'three must be unique'() {\n\t\t\t$mol_assert_unique( [ 3 ] , [ 3 ] , [ 3 ] )\n\t\t} ,\n\t\t\n\t\t'two must be alike'() {\n\t\t\t$mol_assert_like( [ 3 ] , [ 3 ] )\n\t\t} ,\n\t\t\n\t\t'three must be alike'() {\n\t\t\t$mol_assert_like( [ 3 ] , [ 3 ] , [ 3 ] )\n\t\t} ,\n\t\t\n\t} )\n}\n","/** @jsx $mol_jsx_make */\nnamespace $ {\n\t\n\t$mol_test({\n\t\t\n\t\t'Make empty div'() {\n\t\t\t$mol_assert_equal( (<div/>).outerHTML , '<div></div>' )\n\t\t} ,\n\t\t\n\t\t'Define native field'() {\n\t\t\t\n\t\t\tconst dom = <input value='123' /> as HTMLInputElement\n\t\t\t\n\t\t\t$mol_assert_equal( dom.outerHTML , '<input value=\"123\">' )\n\t\t\t$mol_assert_equal( dom.value , '123' )\n\n\t\t} ,\n\t\t\n\t\t'Define classes'() {\n\t\t\t\n\t\t\tconst dom = <div classList={[ 'foo bar' ]} />\n\t\t\t\n\t\t\t$mol_assert_equal( dom.outerHTML , '<div class=\"foo bar\"></div>' )\n\n\t\t} ,\n\t\t\n\t\t'Define styles'() {\n\t\t\t\n\t\t\tconst dom = <div style={{ color : 'red' }} />\n\t\t\t\n\t\t\t$mol_assert_equal( dom.outerHTML , '<div style=\"color: red;\"></div>' )\n\n\t\t} ,\n\t\t\n\t\t'Define dataset'() {\n\t\t\t\n\t\t\tconst dom = <div dataset={{ foo : 'bar' }} />\n\t\t\t\n\t\t\t$mol_assert_equal( dom.outerHTML , '<div data-foo=\"bar\"></div>' )\n\n\t\t} ,\n\t\t\n\t\t'Define attributes'() {\n\t\t\t\n\t\t\tconst dom = <div hidden lang=\"ru\" />\n\t\t\t\n\t\t\t$mol_assert_equal( dom.outerHTML , '<div hidden=\"\" lang=\"ru\"></div>' )\n\n\t\t} ,\n\t\t\n\t\t'Define child nodes'() {\n\n\t\t\tconst dom =\n\t\t\t\t<div>\n\t\t\t\t\thello\n\t\t\t\t\t<strong>world</strong>\n\t\t\t\t\t!\n\t\t\t\t</div>\n\t\t\t\n\t\t\t$mol_assert_equal( dom.outerHTML , '<div>hello<strong>world</strong>!</div>' )\n\n\t\t} ,\n\n\t\t'Function as component'() {\n\n\t\t\tconst Button = ( { hint } : { hint : string } , target : ()=> string ) => {\n\t\t\t\treturn <button title={ hint } >{ target() }</button>\n\t\t\t}\n\n\t\t\tconst dom = <Button id=\"/foo\" hint=\"click me\">{ ()=> 'hey!' }</Button>\n\n\t\t\t$mol_assert_equal( dom.outerHTML , '<button title=\"click me\" id=\"/foo\">hey!</button>' )\n\t\t\t\n\t\t} ,\n\t\t\n\t\t// 'Standart classes as component'() {\n\n\t\t// \tconst dom = <HTMLButtonElement id=\"/foo\" title=\"click me\">hey!</HTMLButtonElement>\n\n\t\t// \t$mol_assert_equal( dom.outerHTML , '<button title=\"click me\" id=\"/foo\">hey!</button>' )\n\t\t\t\n\t\t// } ,\n\t\t\n\t\t'Nested guid generation'() {\n\n\t\t\tconst Foo = ()=> {\n\t\t\t\treturn <div>\n\t\t\t\t\t<Bar id=\"/bar\">\n\t\t\t\t\t\t<img id=\"/icon\" />\n\t\t\t\t\t</Bar>\n\t\t\t\t</div>\n\t\t\t}\n\n\t\t\tconst Bar = ( props : {} , icon : Element )=> {\n\t\t\t\treturn <span>{ icon }</span>\n\t\t\t}\n\n\t\t\tconst dom = <Foo id=\"/foo\" />\n\n\t\t\t$mol_assert_equal( dom.outerHTML , '<div id=\"/foo\"><span id=\"/foo/bar\"><img id=\"/foo/icon\"></span></div>' )\n\t\t\t\n\t\t} ,\n\t\t\n\t\t'Fail on non unique ids'() {\n\n\t\t\tconst App = ()=> {\n\t\t\t\treturn <div>\n\t\t\t\t\t<span id=\"/bar\" />\n\t\t\t\t\t<span id=\"/bar\" />\n\t\t\t\t</div>\n\t\t\t}\n\n\t\t\t$mol_assert_fail( ()=> <App id=\"/foo\" /> , 'JSX already has tag with id \"/bar\"' )\n\t\t\t\n\t\t} ,\n\t\t\n\t})\n\t\n}\n","namespace $ {\n\n\texport function $mol_dom_parse(\n\t\ttext : string ,\n\t\ttype : SupportedType = 'application/xhtml+xml' ,\n\t) {\n\n\t\tconst parser = new $mol_dom_context.DOMParser()\n\t\tconst doc = parser.parseFromString( text , type )\n\t\t\n\t\tconst error = doc.getElementsByTagName( 'parsererror' )[0]\n\t\tif( error ) throw new Error( error.textContent! )\n\n\t\treturn doc\n\t}\n\n}\n","/** @jsx $mol_jsx_make */\nnamespace $ {\n\t\n\t$mol_test({\n\t\t\n\t\t'Attach to document'() {\n\n\t\t\tconst doc = $mol_dom_parse( '<html><body id=\"/foo\"></body></html>' )\n\n\t\t\t$mol_jsx_attach( doc , ()=> <body id=\"/foo\">bar</body> )\n\n\t\t\t$mol_assert_equal( doc.documentElement.outerHTML , '<html><body id=\"/foo\">bar</body></html>' )\n\t\t\t\n\t\t} ,\t\t\n\t\t\n\t})\n\t\n}\n","namespace $ {\n\n\texport class $mol_wrapper extends $mol_object2 {\n\n\t\tstatic wrap : ( task : ( ... ags : any[] )=> any )=> ( ... ags : any[] )=> any\n\t\t\n\t\tstatic run< Result >( task : ()=> Result ) : Result {\n\t\t\treturn this.func( task )()\n\t\t}\n\t\n\t\tstatic func< Args extends any[] , Result , Host = void >(\n\t\t\tfunc : ( this : Host , ... args : Args )=> Result\n\t\t) : ( this : Host , ... args : Args )=> Result {\n\t\t\treturn this.wrap( func )\n\t\t}\n\n\t\tstatic get class() {\n\n\t\t\treturn < Class extends new ( ... args : any[] )=> any >(\n\t\t\t\tClass : Class\n\t\t\t) => {\n\n\t\t\t\ttype Args = ConstructorParameters< Class >\n\t\t\t\ttype Result = InstanceType< Class >\n\n\t\t\t\tconst construct = ( target : new ( ... args : Args )=> Result , args : Args )=> new Class( ... args )\n\n\t\t\t\tconst handler = {\n\t\t\t\t\tconstruct : this.func( construct )\n\t\t\t\t}\n\n\t\t\t\thandler[ Symbol.toStringTag ] = Class.name + '#'\n\n\t\t\t\treturn new Proxy( Class , handler )\n\t\t\t\t\n\t\t\t}\n\n\t\t}\n\n\t\tstatic get method() {\n\t\t\t\n\t\t\treturn <\n\t\t\t\tHost ,\n\t\t\t\tField extends keyof Host ,\n\t\t\t\tArgs extends any[] ,\n\t\t\t\tResult ,\n\t\t\t>(\n\t\t\t\tobj : Host ,\n\t\t\t\tname : Field ,\n\t\t\t\tdescr : TypedPropertyDescriptor< ( this : Host , ... args : Args )=> Result >\n\t\t\t) => {\n\t\t\t\tdescr.value = this.func( descr.value! )\n\t\t\t\treturn descr\n\t\t\t}\n\t\t\t\n\t\t}\n\n\t\tstatic get field() {\n\t\t\t\n\t\t\treturn <\n\t\t\t\tHost ,\n\t\t\t\tField extends keyof Host ,\n\t\t\t\tArgs extends any[] ,\n\t\t\t\tResult ,\n\t\t\t>(\n\t\t\t\tobj : Host ,\n\t\t\t\tname : Field ,\n\t\t\t\tdescr : TypedPropertyDescriptor< Result >\n\t\t\t) => {\n\t\t\t\tdescr.get = descr.set = this.func( descr.get! )\n\t\t\t\treturn descr\n\t\t\t}\n\t\t\t\n\t\t}\n\n\t}\n\n}\n","namespace $ {\n\n\t$mol_test({\n\n\t\t'run callback' () {\n\n\t\t\tclass Plus1 extends $mol_wrapper {\n\t\t\n\t\t\t\tstatic wrap< This , Args extends any[] >( task : ( this : This , ... args : Args )=> number ) {\n\t\t\n\t\t\t\t\treturn function( this : This , ... args : Args ) {\n\t\t\t\t\t\treturn task.call( this , ... args ) + 1 as number\n\t\t\t\t\t}\n\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\n\t\t\t$mol_assert_equal( Plus1.run( ()=> 2 ) , 3 )\n\n\t\t} ,\n\n\t\t'wrap function' () {\n\t\t\n\t\t\tclass Plus1 extends $mol_wrapper {\n\t\t\n\t\t\t\tstatic wrap< This , Args extends any[] >( task : ( this : This , ... args : Args )=> number ) {\n\t\t\n\t\t\t\t\treturn function( this : This , ... args : Args ) {\n\t\t\t\t\t\treturn task.call( this , ... args ) + 1 as number\n\t\t\t\t\t}\n\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\t\n\t\t\tconst obj = {\n\t\t\t\tlevel : 2 ,\n\t\t\t\tpow : Plus1.func( function( this : { level : number } , a ) {\n\t\t\t\t\treturn a ** this.level\n\t\t\t\t} )\n\t\t\t}\n\n\t\t\t$mol_assert_equal( obj.pow( 2 ) , 5 )\n\n\t\t} ,\n\n\t\t'decorate field getter' () {\n\n\t\t\tclass Plus1 extends $mol_wrapper {\n\n\t\t\t\tstatic last = 0\n\t\t\n\t\t\t\tstatic wrap< This , Args extends any[] >( task : ( this : This , ... args : Args )=> number ) {\n\t\t\n\t\t\t\t\treturn function( this : This , ... args : Args ) {\n\t\t\t\t\t\treturn Plus1.last = ( task.call( this , ... args ) || 0 ) + 1 as number\n\t\t\t\t\t}\n\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\n\t\t\tclass Foo {\n\n\t\t\t\t@ Plus1.field\n\t\t\t\tstatic get two() {\n\t\t\t\t\treturn 1\n\t\t\t\t}\n\t\t\t\tstatic set two( next : number ) {}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t$mol_assert_equal( Foo.two , 2 )\n\t\t\t\n\t\t\tFoo.two = 3\n\t\t\t$mol_assert_equal( Plus1.last , 2 )\n\t\t\t$mol_assert_equal( Foo.two , 2 )\n\n\t\t} ,\n\n\t\t'decorate instance method' () {\n\n\t\t\tclass Plus1 extends $mol_wrapper {\n\t\t\n\t\t\t\tstatic wrap< This , Args extends any[] >( task : ( this : This , ... args : Args )=> number ) {\n\t\t\n\t\t\t\t\treturn function( this : This , ... args : Args ) {\n\t\t\t\t\t\treturn task.call( this , ... args ) + 1 as number\n\t\t\t\t\t}\n\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\n\t\t\tclass Foo1 {\n\n\t\t\t\tlevel = 2\n\n\t\t\t\t@ Plus1.method\n\t\t\t\tpow( a : number ) {\n\t\t\t\t\treturn a ** this.level\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tconst Foo2 = Foo1\n\t\t\tconst foo = new Foo2\n\n\t\t\t$mol_assert_equal( foo.pow( 2 ) , 5 )\n\n\t\t} ,\n\n\t\t'decorate static method' () {\n\t\t\t\n\t\t\tclass Plus1 extends $mol_wrapper {\n\t\t\n\t\t\t\tstatic wrap< This , Args extends any[] >( task : ( this : This , ... args : Args )=> number ) {\n\t\t\n\t\t\t\t\treturn function( this : This , ... args : Args ) {\n\t\t\t\t\t\treturn task.call( this , ... args ) + 1 as number\n\t\t\t\t\t}\n\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\n\t\t\tclass Foo {\n\n\t\t\t\tstatic level = 2\n\n\t\t\t\t@ Plus1.method\n\t\t\t\tstatic pow( a : number ) {\n\t\t\t\t\treturn a ** this.level\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t$mol_assert_equal( Foo.pow( 2 ) , 5 )\n\n\t\t} ,\n\n\t\t'decorate class' () {\n\t\t\t\n\t\t\tclass BarInc extends $mol_wrapper {\n\n\t\t\t\tstatic wrap< This , Args extends any[] >( task : ( this : This , ... args : Args )=> Foo ) {\n\t\t\t\t\t\n\t\t\t\t\treturn function( this : This , ... args : Args ) {\n\n\t\t\t\t\t\tconst foo = task.call( this , ...args )\n\t\t\t\t\t\tfoo.bar ++\n\t\t\t\t\t\treturn foo\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t\n\t\t\t@ BarInc.class\n\t\t\tclass Foo {\n\t\t\t\tconstructor( public bar : number ) {}\n\t\t\t}\n\n\t\t\t$mol_assert_equal( new Foo( 2 ).bar , 3 )\n\n\t\t} ,\n\n\t})\n}\n","namespace $ {\n\n\t// https://docs.google.com/document/d/1FTascZXT9cxfetuPRT2eXPQKXui4nWFivUnS_335T3U/preview#\n\t$['devtoolsFormatters'] = $['devtoolsFormatters'] || []\n\n\texport function $mol_dev_format_register( config : {\n\t\theader : ( val : any , config : any )=> any\n\t\thasBody : ( val : any , config : any )=> false\n\t} | {\n\t\theader : ( val : any , config : any )=> any\n\t\thasBody : ( val : any , config : any )=> boolean\n\t\tbody : ( val : any , config : any )=> any\n\t} ) {\n\t\t$['devtoolsFormatters'].push( config )\n\t}\n\n\texport let $mol_dev_format_head = Symbol( '$mol_dev_format_head' )\n\texport let $mol_dev_format_body = Symbol( '$mol_dev_format_body' )\n\n\t$mol_dev_format_register({\n\n\t\theader : ( val : any , config = false ) => {\n\t\t\t\n\t\t\tif( config ) return null\n\n\t\t\tif( !val ) return null\n\t\t\t\n\t\t\tif( $mol_dev_format_head in val ) {\n\t\t\t\treturn val[ $mol_dev_format_head ]()\n\t\t\t}\n\n\t\t\treturn null\n\t\t\t\n\t\t} ,\n\t\t\n\t\thasBody : val => val[ $mol_dev_format_body ] ,\n\n\t\tbody : val => val[ $mol_dev_format_body ]() ,\n\n\t})\n\n\texport function $mol_dev_format_native( obj : any ) {\n\t\t\n\t\tif( typeof obj === 'undefined' ) return $mol_dev_format_shade( 'undefined' )\n\t\tif( typeof obj !== 'object' ) return obj\n\n\t\treturn [\n\t\t\t'object' ,\n\t\t\t{\n\t\t\t\tobject : obj ,\n\t\t\t\tconfig : true ,\n\t\t\t} ,\n\t\t]\n\n\t}\n\n\texport function $mol_dev_format_auto( obj : any ) {\n\t\t\n\t\tif( obj == null ) return $mol_dev_format_shade( String( obj ) )\n\n\t\tif( typeof obj === 'object' && $mol_dev_format_head in obj ) {\n\t\t\treturn obj[ $mol_dev_format_head ]()\n\t\t}\n\n\t\treturn [\n\t\t\t'object' ,\n\t\t\t{\n\t\t\t\tobject : obj ,\n\t\t\t\tconfig : false ,\n\t\t\t} ,\n\t\t]\n\n\t}\n\n\texport function $mol_dev_format_element( element : string , style : object , ...content : any[] ) {\n\t\t\t\n\t\tconst styles = [] as string[]\n\t\t\n\t\tfor( let key in style ) styles.push( `${ key } : ${ style[key] }` )\n\t\t\n\t\treturn [\n\t\t\telement ,\n\t\t\t{\n\t\t\t\tstyle : styles.join( ' ; ' ) ,\n\t\t\t} ,\n\t\t\t... content ,\n\t\t]\n\n\t}\n\n\texport function $mol_dev_format_span( style : object , ...content : any[] ) {\n\t\treturn $mol_dev_format_element(\n\t\t\t'span' ,\n\t\t\t{\n\t\t\t\t'vertical-align' : '8%',\n\t\t\t\t... style ,\n\t\t\t} ,\n\t\t\t... content ,\n\t\t)\n\t}\n\n\texport let $mol_dev_format_div = $mol_dev_format_element.bind( null , 'div' )\n\texport let $mol_dev_format_ol = $mol_dev_format_element.bind( null , 'ol' )\n\texport let $mol_dev_format_li = $mol_dev_format_element.bind( null , 'li' )\n\texport let $mol_dev_format_table = $mol_dev_format_element.bind( null , 'table' )\n\texport let $mol_dev_format_tr = $mol_dev_format_element.bind( null , 'tr' )\n\texport let $mol_dev_format_td = $mol_dev_format_element.bind( null , 'td' )\n\n\texport let $mol_dev_format_accent = $mol_dev_format_span.bind( null , {\n\t\t'color' : 'magenta' ,\n\t} )\n\n\texport let $mol_dev_format_strong = $mol_dev_format_span.bind( null , {\n\t\t'font-weight' : 'bold' ,\n\t} )\n\n\texport let $mol_dev_format_string = $mol_dev_format_span.bind( null , {\n\t\t'color' : 'green',\n\t} )\n\n\texport let $mol_dev_format_shade = $mol_dev_format_span.bind( null , {\n\t\t'color' : 'gray',\n\t} )\n\n\texport let $mol_dev_format_indent = $mol_dev_format_div.bind( null , {\n\t\t'margin-left': '13px'\n\t} )\n\n}\n","namespace $ {\n\t\n\texport function $mol_maybe< Value >( value : Value | null | undefined ) : Value[] {\n\t\treturn ( value == null ) ? [] : [ value ]\n\t}\n\t\n}\n","namespace $ {\n\t$mol_test( {\n\t\t\n\t\t'all cases of using maybe'() {\n\t\t\t$mol_assert_equal( $mol_maybe( 0 )[ 0 ] , 0 )\n\t\t\t$mol_assert_equal( $mol_maybe( false )[ 0 ] , false )\n\t\t\t$mol_assert_equal( $mol_maybe( null )[ 0 ] , void 0 )\n\t\t\t$mol_assert_equal( $mol_maybe( void 0 )[ 0 ] , void 0 )\n\t\t\t\n\t\t\t$mol_assert_equal( $mol_maybe< number >( void 0 ).map( v => v.toString() )[ 0 ] , void 0 )\n\t\t\t$mol_assert_equal( $mol_maybe( 0 ).map( v => v.toString() )[ 0 ] , '0' )\n\t\t} ,\n\t\t\n\t} )\n}\n","namespace $ {\n\n\texport class $mol_log2 extends $mol_wrapper {\n\n\t\tstatic current = null as null | $mol_log2\n\n\t\tstatic wrap< This extends { $ : $mol_ambient_context } , Args extends any[] , Result >( task : ( this : This , ... args : Args )=> Result ) {\n\n\t\t\tconst Inner = this\n\n\t\t\tconst wrapped = function( this : This , ... args : Args ) {\n\t\t\t\t\n\t\t\t\tconst outer = $mol_log2.current\n\t\t\t\tconst inner = $mol_log2.current = new Inner( this , task.name , args )\n\t\t\t\t\n\t\t\t\ttry {\n\t\t\t\t\treturn task.call( this , ... args )\n\t\t\t\t} finally {\n\t\t\t\t\t$mol_log2.current = outer\n\t\t\t\t\tinner.flush()\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn wrapped\n\t\t}\n\n\t\tconstructor(\n\t\t\treadonly host : any ,\n\t\t\treadonly id : string ,\n\t\t\treadonly args : any[] ,\n\t\t) {\n\t\t\tsuper()\n\t\t\tthis[ Symbol.toStringTag ] = host ? `${ host }.${ id }` : id\n\t\t}\n\n\t\tstream = [] as $mol_log2_line[]\n\t\t\n\t\tflush() {\n\t\t\tif( this.stream.length === 0 ) return\n\t\t\tconsole.debug( this )\n\t\t}\n\n\t\tinfo( ... values : any[] ) {\n\t\t\tthis.stream.push( new $mol_log2_line( ... $mol_log2.prefix , ... values ) )\n\t\t}\n\n\t\t[ $mol_dev_format_head ]() {\n\t\t\treturn $mol_dev_format_span( {} ,\n\t\t\t\t... $mol_maybe( this.host ).map( $mol_dev_format_auto ) ,\n\t\t\t\t'.' ,\n\t\t\t\t$mol_dev_format_strong( this.id ) ,\n\t\t\t\t'(',\n\t\t\t\t... this.args.map( $mol_dev_format_auto ) ,\n\t\t\t\t') ' ,\n\t\t\t\t$mol_dev_format_auto( this.stream ) ,\n\t\t\t)\n\t\t}\n\n\t\tstatic info( ... values : any[] ) {\n\t\t\t\n\t\t\tconst excludes = $mol_log2.excludes\n\t\t\tif( !excludes ) return\n\t\t\t\n\t\t\tconst skip = excludes.some( ( regexp , index )=> {\n\t\t\t\treturn regexp && regexp.test( String( values[ index ] ) ) || false\n\t\t\t} )\n\n\t\t\tif( skip ) return\n\t\t\t\n\t\t\tif( !$mol_log2.current ) {\n\t\t\t\tconsole.warn( new Error( `$mol_log.current is not defined. Wrap entry point to $mol_log!` ) )\n\t\t\t\t$mol_log2.current = new $mol_log2( null , '$mol_log2_default' , [] )\n\t\t\t\tconsole.debug( $mol_log2.current )\n\t\t\t}\n\n\t\t\t$mol_log2.current.info( ... values )\n\n\t\t}\n\n\t\t/**\n\t\t * Enable all logs\n\t\t * \n\t\t * \t$mol_log2.excludes = []\n\t\t * \n\t\t * Exclude all atom logs:\n\t\t * \n\t\t * \t$mol_log2.excludes = [ , /˸|🠈|⏭|⏯|►|💤|☍|☌|✓|✔|✘|🕱|�/ ]\n\t\t * \n\t\t * Disable logs:\n\t\t * \n\t\t * \t$mol_log2.excludes = null\n\t\t */\n\t\tstatic excludes = null as any as null | ( undefined | RegExp )[]\n\n\t\tstatic prefix = [] as any[]\n\n\t}\n\n\texport class $mol_log2_indent extends $mol_wrapper {\n\n\t\tstatic wrap< This extends { $ : $mol_ambient_context } , Args extends any[] , Result >( task : ( this : This , ... args : Args )=> Result ) {\n\n\t\t\tconst Inner = this\n\n\t\t\tconst wrapped = function( this : This , ... args : Args ) {\n\t\t\t\ttry {\n\t\t\t\t\t$mol_log2.prefix.push( $mol_log2_token_indent )\n\t\t\t\t\treturn task.call( this , ... args )\n\t\t\t\t} finally {\n\t\t\t\t\t$mol_log2.prefix.pop()\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn wrapped\n\t\t}\n\n\t}\n\t\n\texport class $mol_log2_table extends $mol_log2 {\n\n\t\t[ $mol_dev_format_head ]() {\n\t\t\treturn $mol_dev_format_span( {} ,\n\t\t\t\t$mol_dev_format_strong( `${this}(` ) ,\n\t\t\t\t... this.args.map( $mol_dev_format_auto ) ,\n\t\t\t\t$mol_dev_format_strong( `) ` ) ,\n\t\t\t)\n\t\t}\n\n\t\t[ $mol_dev_format_body ]() {\n\t\t\treturn $mol_dev_format_table( {} , ...this.stream.map( $mol_dev_format_auto ) )\n\t\t}\n\n\t}\n\n\texport class $mol_log2_hidden extends $mol_log2 {\n\n\t\tflush() {}\n\n\t}\n\n\texport class $mol_log2_line extends Array<any> {\n\n\t\tconstructor( ... items : any[] ) {\n\t\t\tsuper( ... items )\n\t\t}\n\n\t\t[ $mol_dev_format_head ]() {\n\t\t\treturn $mol_dev_format_tr( {} ,\n\t\t\t\t... this.map( item => $mol_dev_format_td( {} ,\n\t\t\t\t\t$mol_dev_format_auto( item )\n\t\t\t\t) )\n\t\t\t)\n\t\t}\n\n\t}\n\n\texport class $mol_log2_token extends Array<any> {\n\n\t\tconstructor( ... items : any[] ) {\n\t\t\tsuper( ... items )\n\t\t}\n\n\t\t[ $mol_dev_format_head ]() {\n\t\t\treturn $mol_dev_format_accent( ... this )\n\t\t}\n\n\t}\n\n\texport let $mol_log2_token_empty = new $mol_log2_token( '' )\n\texport let $mol_log2_token_indent = new $mol_log2_token( '\\t' )\n\n\texport let $mol_log2_legend = new $mol_log2_table( null , '$mol_log2_legend' , [] )\n\n\tif( !$mol_log2.excludes ) $mol_log2_legend.info( $mol_log2_token_empty , 'Use `$mol_log2.excludes : null | RegExp[]` to toggle logs' )\n\n}\n","namespace $ {\n\n\t$mol_test_mocks.push( $ => {\n\t\t$.$mol_log2 = class extends $mol_log2 {\n\t\t\tstatic current = new $mol_log2( null , '$mol_log2_mock' , [] )\n\t\t}\n\t} )\n\n}\n","namespace $ {\n\n\t/// @todo right orderinng\n\texport let $mol_after_mock_queue = [] as ( ()=> void )[]\n\n\texport function $mol_after_mock_warp() {\n\t\tconst queue = $mol_after_mock_queue.splice( 0 )\n\t\tfor( const task of queue ) task()\n\t}\n\n\texport class $mol_after_mock_commmon extends $mol_object2 {\n\n\t\tpromise = Promise.resolve()\n\t\tcancelled = false\n\t\tid : any\n\n\t\tconstructor( public task : ()=> void ) {\n\t\t\tsuper()\n\t\t\t$mol_after_mock_queue.push( task )\n\t\t}\n\n\t\tdestructor() {\n\t\t\tconst index = $mol_after_mock_queue.indexOf( this.task )\n\t\t\tif( index >= 0 )$mol_after_mock_queue.splice( index , 1 )\n\t\t}\n\n\t}\n\n\texport class $mol_after_mock_timeout extends $mol_after_mock_commmon {\n\n\t\tconstructor(\n\t\t\tpublic delay : number ,\n\t\t\ttask : ()=> void ,\n\t\t) {\n\t\t\tsuper( task )\n\t\t}\n\n\t}\n\t\n}\n","namespace $ {\n\n\texport class $mol_after_tick extends $mol_object2 {\n\n\t\tpromise : any\n\t\tcancelled = false\n\n\t\tconstructor(\n\t\t\tpublic task : ()=> void ,\n\t\t) {\n\t\t\tsuper()\n\t\t\tthis.promise = Promise.resolve().then( ()=> {\n\t\t\t\tif( this.cancelled ) return\n\t\t\t\ttask()\n\t\t\t} )\n\t\t}\n\n\t\tdestructor() {\n\t\t\tthis.cancelled = true\n\t\t}\n\n\t}\n\t\n}\n","namespace $ {\n\n\t$mol_test_mocks.push( $ => {\n\t\t$.$mol_after_tick = $mol_after_mock_commmon as any as typeof $mol_after_tick\n\t})\n\n}\n","namespace $ {\n\n\texport function $mol_compare_any( a : any , b : any ) {\n\t\t\n\t\tif( a === b ) return true\n\t\t\n\t\tif( !Number.isNaN( a ) ) return false\n\t\tif( !Number.isNaN( b ) ) return false\n\n\t\treturn true\n\t}\n\n}\n","namespace $ {\n\n\t$mol_test({\n\n\t\t'objects by reference' () {\n\t\t\t$mol_assert_equal( $mol_compare_any( {} , {} ) , false )\n\t\t} ,\n\n\t\t'primitives by value' () {\n\t\t\t$mol_assert_equal( $mol_compare_any( 'a' , 'a' ) , true )\n\t\t} ,\n\n\t\t'NaN by value' () {\n\t\t\t$mol_assert_equal( $mol_compare_any( Number.NaN , Number.NaN ) , true )\n\t\t} ,\n\n\t\t'NaN not equal zero' () {\n\t\t\t$mol_assert_equal( $mol_compare_any( Number.NaN , 0 ) , false )\n\t\t} ,\n\n\t})\n\n}\n","namespace $ {\n\n\tconst cache = new WeakMap< any , boolean >()\n\n\texport const $mol_conform_stack = [] as any[]\n\n\texport function $mol_conform< Target , Source >( target : Target , source : Source ) : Target {\n\n\t\tif( $mol_compare_any( target , source ) ) return source as any\n\n\t\tif( !target || typeof target !== 'object' ) return target\n\t\tif( !source || typeof source !== 'object' ) return target\n\n\t\tif( target instanceof Error ) return target\n\t\tif( source instanceof Error ) return target\n\t\t\n\t\tif( target['constructor'] !== source['constructor'] ) return target\n\n\t\tif( cache.get( target ) ) return target\n\t\tcache.set( target , true )\n\t\t\n\t\tconst conform = $mol_conform_handlers.get( target['constructor'] )\n\t\tif( !conform ) return target\n\n\t\tif( $mol_conform_stack.indexOf( target ) !== -1 ) return target\n\n\t\t$mol_conform_stack.push( target )\n\n\t\ttry { return conform( target , source ) }\n\t\tfinally { $mol_conform_stack.pop() }\n\n\t}\n\n\texport const $mol_conform_handlers = new WeakMap< Object , ( target : any , source : any )=> any >()\n\n\texport function $mol_conform_handler< Class >(\n\t\tcl : { new( ... args : any[] ) : Class } ,\n\t\thandler : ( target : Class , source : Class )=> Class ,\n\t) {\n\t\t$mol_conform_handlers.set( cl , handler )\n\t}\n\n\tfunction $mol_conform_array<\n\t\tValue ,\n\t\tList extends {\n\t\t\t[ index : number ] : Value\n\t\t\tlength : number\n\t\t} ,\n\t>( target : List , source : List ) {\n\t\t\n\t\tif( source.length !== target.length ) return target\n\t\t\n\t\tfor( let i = 0 ; i < target.length ; ++i ) {\n\t\t\tif( !$mol_compare_any( source[i] , target[i] ) ) return target\n\t\t}\n\n\t\treturn source\n\t}\n\n\t$mol_conform_handler( Array , $mol_conform_array )\n\t$mol_conform_handler( Uint8Array , $mol_conform_array )\n\t$mol_conform_handler( Uint16Array , $mol_conform_array )\n\t$mol_conform_handler( Uint32Array , $mol_conform_array )\n\n\t$mol_conform_handler( Object , ( target , source )=> {\n\n\t\tlet count = 0\n\t\tlet equal = true\n\n\t\tfor( let key in target ) {\n\n\t\t\tconst conformed = $mol_conform( target[key] , source[key] )\n\t\t\t\n\t\t\tif( conformed !== target[key] ) {\n\t\t\t\ttry { target[key] = conformed } catch( error ) {}\n\t\t\t\tif( !$mol_compare_any( conformed , target[key] ) ) equal = false\n\t\t\t}\n\t\t\t\n\t\t\tif( !$mol_compare_any( conformed , source[key] ) ) equal = false\n\t\t\t\n\t\t\t++ count\n\t\t}\n\n\t\tfor( let key in source ) if( -- count < 0 ) break\n\n\t\treturn ( equal && count === 0 ) ? source : target\n\t} )\n\n\t$mol_conform_handler( Date , ( target , source )=> {\n\t\tif( target.getTime() === source.getTime() ) return source\n\t\treturn target \n\t} )\n\n\t$mol_conform_handler( RegExp , ( target , source )=> {\n\t\tif( target.toString() === source.toString() ) return source\n\t\treturn target\n\t} )\n\n}\n","namespace $ {\n\n\t$mol_test({\n\n\t\t'return source when same object'() {\n\t\t\tconst target = {}\n\t\t\t$mol_assert_equal( $mol_conform( target , target ) , target )\n\t\t} ,\n\n\t\t'return target when some is not object'() {\n\t\t\tconst obj = { a : 1 }\n\t\t\t$mol_assert_equal( $mol_conform( true , obj ) , true )\n\t\t\t$mol_assert_equal( $mol_conform( obj , true ) , obj )\n\t\t} ,\n\n\t\t'return target when some is null'() {\n\t\t\tconst obj = { a : 1 }\n\t\t\t$mol_assert_equal( $mol_conform( null , obj ) , null )\n\t\t\t$mol_assert_equal( $mol_conform( obj , null ) , obj )\n\t\t} ,\n\n\t\t'return target when some is undefined'() {\n\t\t\tconst obj = { a : 1 }\n\t\t\t$mol_assert_equal( $mol_conform( undefined , obj ) , undefined )\n\t\t\t$mol_assert_equal( $mol_conform( obj , undefined ) , obj )\n\t\t} ,\n\n\t\t'return target when different keys count'() {\n\t\t\tconst target = [ 1 , 2 , 3 ]\n\t\t\tconst source = [ 1 , 2 , 3 , undefined ]\n\t\t\tconst result = $mol_conform( target , source )\n\t\t\t\n\t\t\t$mol_assert_equal( result , target )\n\t\t\t$mol_assert_equal( result.join(',') , '1,2,3' )\n\t\t} ,\n\n\t\t'return source when array values are strong equal'() {\n\t\t\tconst source = [ 1 , 2 , 3 ]\n\t\t\t$mol_assert_equal( $mol_conform( [ 1 , 2 , 3 ] , source ) , source )\n\t\t} ,\n\n\t\t'return source when object values are strong equal'() {\n\t\t\tconst source = { a : 1 , b : 2 }\n\t\t\t$mol_assert_equal( $mol_conform( { a : 1 , b : 2 } , source ) , source )\n\t\t} ,\n\n\t\t'return target when some values are not equal'() {\n\t\t\tconst target = [ 1 , 2 , 3 ]\n\t\t\tconst source = [ 1 , 2 , 5 ]\n\t\t\tconst result = $mol_conform( target , source )\n\t\t\t\n\t\t\t$mol_assert_equal( result , target )\n\t\t\t$mol_assert_equal( result.join(',') , '1,2,3' )\n\t\t} ,\n\n\t\t'return source when values are deep equal'() {\n\t\t\tconst source = { foo : { bar : 1 } }\n\t\t\t$mol_assert_equal( $mol_conform( { foo : { bar : 1 } } , source ) , source )\n\t\t} ,\n\n\t\t'return target with equal values from source and not equal from target'() {\n\t\t\tconst source = { foo : { xxx : 1 } , bar : { xxx : 2 } }\n\t\t\tconst target = { foo : { xxx : 1 } , bar : { xxx : 3 } }\n\t\t\tconst result = $mol_conform( target , source )\n\n\t\t\t$mol_assert_equal( result , target )\n\t\t\t$mol_assert_equal( result.foo , source.foo )\n\t\t\t$mol_assert_equal( result.bar , target.bar )\n\t\t} ,\n\n\t\t'return target when equal but with different class'() {\n\t\t\tconst target = { '0' : 1 }\n\t\t\t$mol_assert_equal( $mol_conform( target , [ 1 ] ) , target )\n\t\t} ,\n\n\t\t'return target when conformer for class is not defined'() {\n\t\t\tconst Obj = class {}\n\n\t\t\tconst source = new Obj \n\t\t\tconst target = new Obj\n\t\t\tconst result = $mol_conform( target , source )\n\n\t\t\t$mol_assert_equal( result , target )\n\t\t} ,\n\n\t\t'return target when has cyclic reference'() {\n\t\t\tconst source = { foo : {} }\n\t\t\tsource['self'] = source\n\n\t\t\tconst target = { foo : {} }\n\t\t\ttarget['self'] = target\n\n\t\t\tconst result = $mol_conform( target , source )\n\n\t\t\t$mol_assert_equal( result , target )\n\t\t\t$mol_assert_equal( result['self'] , target )\n\t\t\t$mol_assert_equal( result.foo , source.foo )\n\t\t} ,\n\n\t\t'return source when equal dates'() {\n\t\t\tconst source = new Date( 12345 )\n\t\t\tconst target = new Date( 12345 )\n\t\t\tconst result = $mol_conform( target , source )\n\n\t\t\t$mol_assert_equal( result , source )\n\t\t} ,\n\n\t\t'return source when equal regular expressions'() {\n\t\t\tconst source = /\\x22/mig\n\t\t\tconst target = /\\x22/mig\n\t\t\tconst result = $mol_conform( target , source )\n\n\t\t\t$mol_assert_equal( result , source )\n\t\t} ,\n\t\t\n\t\t'return cached value if already conformed'() {\n\t\t\tconst source = { foo : { xxx : 1 } , bar : { xxx : 3 } }\n\t\t\tconst target = { foo : { xxx : 2 } , bar : { xxx : 3 } }\n\t\t\tconst result = $mol_conform( target , source )\n\n\t\t\ttarget.foo.xxx = 1\n\t\t\t$mol_assert_equal( $mol_conform( target.foo , source.foo ) , target.foo )\n\t\t} ,\n\n\t\t'skip readlony fields'() {\n\t\t\tconst source = { foo : {} , bar : {} }\n\n\t\t\tconst target = { foo : {} , bar : {} }\n\t\t\tObject.defineProperty( target , 'bar' , { value : {} , writable : false } )\n\n\t\t\tconst result = $mol_conform( target , source )\n\n\t\t\t$mol_assert_equal( result , target )\n\t\t\t$mol_assert_equal( result.foo , source.foo )\n\t\t\t$mol_assert_equal( result.bar , target.bar )\n\t\t} ,\n\n\t\t'object with NaN'() {\n\n\t\t\tconst source = { foo : Number.NaN }\n\t\t\tconst target = { foo : Number.NaN }\n\n\t\t\tconst result = $mol_conform( target , source )\n\n\t\t\t$mol_assert_equal( result , source )\n\t\t} ,\n\n\t\t'array with NaN'() {\n\n\t\t\tconst source = [ Number.NaN ]\n\t\t\tconst target = [ Number.NaN ]\n\n\t\t\tconst result = $mol_conform( target , source )\n\n\t\t\t$mol_assert_equal( result , source )\n\t\t} ,\n\n\t})\n\n}\n","namespace $ {\n\n\texport function $mol_array_trim< Item >( array : Item[] ) {\n\n\t\tlet last = array.length\n\t\twhile( last > 0 ) {\n\t\t\t\n\t\t\t-- last\n\t\t\tconst value = array[ last ]\n\t\t\t\n\t\t\tif( value === undefined ) array.pop()\n\t\t\telse break\n\t\t}\n\n\t\treturn array\n\t}\n\n}\n","namespace $ {\n\n\t$mol_test({\n\n\t\t'trim array'() {\n\n\t\t\tconst array = [ undefined , null , 0, false , null , undefined , undefined ]\n\t\t\tconst correct = [ undefined , null , 0, false , null ]\n\t\t\t\n\t\t\t$mol_array_trim( array )\n\t\t\t\n\t\t\t$mol_assert_like( array , correct )\n\n\t\t}\n\n\t})\n\n}\n","namespace $ {\n\n\texport const enum $mol_fiber_status {\n\t\tpersist = -3 , // 🗹\n\t\tactual = -2 , // ✔\n\t\tdoubt = -1 , // �\n\t\tobsolete = 0 , // ✘\n\t}\n\n\texport function $mol_fiber_defer< Value = void >( calculate : ()=> Value ) {\n\t\t\n\t\tconst fiber = new $mol_fiber\n\t\t\n\t\tfiber.calculate = calculate\n\t\tfiber[ Symbol.toStringTag ] = calculate.name\n\t\t\n\t\tfiber.schedule()\n\t\t\n\t\treturn fiber\n\t}\n\n\texport function $mol_fiber_func<\n\t\tThis ,\n\t\tArgs extends any[] ,\n\t\tResult ,\n\t>( calculate : ( this : This , ... args : Args )=> Result ) {\n\t\tconsole.warn( '$mol_fiber_func is deprecated. Use $mol_fiber.func instead.' )\n\t\treturn $mol_fiber.func( calculate )\n\t}\n\n\texport function $mol_fiber_root<\n\t\tCalculate extends ( this : This , ... args : any[] )=> Result ,\n\t\tResult = void ,\n\t\tThis = void ,\n\t>( calculate : Calculate ) {\n\t\t\n\t\tconst wrapper = function( ... args : any[] ) {\n\t\t\tconst fiber = new $mol_fiber< Result >()\n\t\t\tfiber.calculate = calculate.bind( this , ... args )\n\t\t\treturn fiber.wake()\n\t\t} as Calculate\n\t\t\n\t\twrapper[ Symbol.toStringTag ] = calculate.name\n\t\t\n\t\treturn wrapper\n\t}\n\n\texport function $mol_fiber_method< Host , Value >(\n\t\tobj : Host ,\n\t\tname : keyof Host ,\n\t\tdescr : TypedPropertyDescriptor< ( this : Host , ... args : any[] )=> Value >\n\t) {\n\t\tconsole.warn( '$mol_fiber_method is deprecated. Use $mol_fiber.method instead.' )\n\t\treturn $mol_fiber.method( obj , name , descr )\n\t}\n\n\texport function $mol_fiber_async< Args extends any[] , Value >( task : ( ... args : Args )=> Value ) {\n\n\t\treturn ( ... args : Args )=> new Promise< Value >( $mol_fiber_root( ( done , fail )=> {\n\n\t\t\ttry {\n\n\t\t\t\tdone( task( ... args ) )\n\n\t\t\t} catch( error ) {\n\n\t\t\t\tif( 'then' in error ) return $mol_fail_hidden( error )\n\n\t\t\t\tfail( error )\n\n\t\t\t}\n\n\t\t} ) )\n\n\t}\n\n\texport function $mol_fiber_sync< Args extends any[] , Value = void , This = void >(\n\t\trequest : ( this : This , ... args : Args )=> PromiseLike< Value >\n\t) : ( ... args : Args )=> Value {\n\n\t\treturn function $mol_fiber_sync_wrapper( this : This , ... args : Args ) {\n\n\t\t\tconst slave = $mol_fiber.current\n\n\t\t\tlet master = slave && slave.master\n\t\t\tif( !master || master.constructor !== $mol_fiber ) {\n\t\t\t\tmaster = new $mol_fiber\n\t\t\t\tmaster.cursor = $mol_fiber_status.persist\n\t\t\t\tmaster.error = ( request.call( this , ... args ) as PromiseLike< Value > ).then(\n\t\t\t\t\t$mol_log2.func( master!.push ).bind( master! ) ,\n\t\t\t\t\t$mol_log2.func( master!.fail ).bind( master! ) ,\n\t\t\t\t)\n\t\t\t\tconst prefix = slave ? `${ slave }/${ slave.cursor / 2 }:` : '/'\n\t\t\t\tmaster[ Symbol.toStringTag ] = prefix + ( request.name || $mol_fiber_sync.name )\n\t\t\t}\n\n\t\t\treturn master.get()\n\n\t\t}\n\n\t}\n\n\texport async function $mol_fiber_warp() {\n\t\tconst deadline = $mol_fiber.deadline\n\t\ttry {\n\t\t\t$mol_fiber.deadline = Number.POSITIVE_INFINITY\n\t\t\twhile( $mol_fiber.queue.length ) await $mol_fiber.tick()\n\t\t\treturn Promise.resolve()\n\t\t} finally {\n\t\t\t$mol_fiber.deadline = deadline\n\t\t}\n\t}\n\n\texport function $mol_fiber_fence( func : ()=> any ) {\n\t\tconst prev = $mol_fiber.current\n\t\ttry {\n\t\t\t$mol_fiber.current = null\n\t\t\treturn func()\n\t\t} finally {\n\t\t\t$mol_fiber.current = prev\n\t\t}\n\t}\n\n\texport function $mol_fiber_unlimit< Result >( task : ()=> Result ) {\n\t\t\n\t\tconst deadline = $mol_fiber.deadline\n\t\t\n\t\ttry {\n\n\t\t\t$mol_fiber.deadline = Number.POSITIVE_INFINITY\n\t\t\t\n\t\t\treturn task()\n\n\t\t} finally {\n\n\t\t\t$mol_fiber.deadline = deadline\n\n\t\t}\n\n\t}\n\n\texport class $mol_fiber_solid extends $mol_wrapper {\n\n\t\tstatic func< This , Args extends any[] , Result >( task : ( this : This , ... args : Args )=> Result ) {\n\n\t\t\tfunction wrapped( this : This , ... args : Args ) {\n\n\t\t\t\tconst deadline = $mol_fiber.deadline\n\n\t\t\t\ttry {\n\n\t\t\t\t\t$mol_fiber.deadline = Number.POSITIVE_INFINITY\n\t\t\t\t\t\n\t\t\t\t\treturn task.call( this , ... args ) as Result\n\n\t\t\t\t} catch( error ) {\n\n\t\t\t\t\tif( 'then' in error ) $mol_fail( new Error( 'Solid fiber can not be suspended.' ) )\n\t\t\t\t\treturn $mol_fail_hidden( error )\n\n\t\t\t\t} finally {\n\n\t\t\t\t\t$mol_fiber.deadline = deadline\n\n\t\t\t\t}\n\t\t\n\t\t\t}\n\n\t\t\treturn $mol_fiber.func( wrapped )\n\n\t\t}\n\n\t}\n\n\texport class $mol_fiber< Value = any > extends $mol_wrapper {\n\n\t\tstatic wrap< Func extends ( ... args : any[] )=> any >( task : Func ) {\n\t\t\t\n\t\t\treturn function $mol_fiber_wrapper( this : ThisParameterType< Func > , ... args : Parameters< Func > ) {\n\n\t\t\t\tconst slave = $mol_fiber.current\n\n\t\t\t\tlet master = slave && slave.master\n\t\t\t\tif( !master || master.constructor !== $mol_fiber ) {\n\t\t\t\t\tmaster = new $mol_fiber\n\t\t\t\t\tmaster.calculate = task.bind( this , ... args )\n\t\t\t\t\tconst prefix = slave ? `${ slave }/${ slave.cursor / 2 }:` : '/'\n\t\t\t\t\tmaster[ Symbol.toStringTag ] = `${ prefix }${ task.name }`\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn master.get()\n\n\t\t\t}\n\n\t\t}\n\n\t\tstatic quant = 16\n\t\tstatic deadline = 0\n\t\tstatic liveline = 0\n\n\t\tstatic current = null as null | $mol_fiber\n\t\t\n\t\tstatic scheduled = null as null | $mol_after_tick\n\t\tstatic queue = [] as ( ()=> PromiseLike< any > )[]\n\t\t\n\t\tstatic async tick() {\n\t\n\t\t\twhile( $mol_fiber.queue.length > 0 ) {\n\n\t\t\t\tconst now = Date.now()\n\n\t\t\t\tif( now >= $mol_fiber.deadline ) {\n\t\t\t\t\t$mol_fiber.schedule()\n\t\t\t\t\t$mol_fiber.liveline = now\n\t\t\t\t\treturn \n\t\t\t\t}\n\n\t\t\t\tconst task = $mol_fiber.queue.shift()!\n\t\t\t\tawait task()\n\n\t\t\t}\n\t\t\t\n\t\t}\n\n\t\tstatic schedule() {\n\n\t\t\tif( !$mol_fiber.scheduled ) {\n\n\t\t\t\t$mol_fiber.scheduled = new $mol_after_tick( async ()=> {\n\t\t\t\t\t\n\t\t\t\t\tconst now = Date.now()\n\t\t\t\t\tlet quant = $mol_fiber.quant\n\t\t\t\t\t\n\t\t\t\t\tif( $mol_fiber.liveline ) {\n\t\t\t\t\t\tquant = Math.max( quant , Math.floor( ( now - $mol_fiber.liveline ) / 2 ) )\n\t\t\t\t\t\t$mol_fiber.liveline = 0\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t$mol_fiber.deadline = now + quant\n\t\t\t\t\t$mol_fiber.scheduled = null\n\t\t\t\t\t\n\t\t\t\t\tawait $mol_fiber.tick()\n\n\t\t\t\t} )\n\n\t\t\t}\n\n\t\t\tconst promise : Promise< any > = new this.$.Promise( done => this.queue.push( ()=> ( done() , promise ) ) )\n\t\t\treturn promise\n\n\t\t}\n\n\t\tvalue = undefined as unknown as Value\n\t\terror = null as null | Error | PromiseLike< Value >\n\t\tcursor = $mol_fiber_status.obsolete\n\t\tmasters = [] as ( $mol_fiber | number | undefined )[]\n\t\tcalculate! : ()=> Value\n\t\t\n\t\tschedule() {\n\t\t\t$mol_fiber.schedule().then( ()=> this.wake() )\n\t\t}\n\n\t\t@ $mol_log2.method\n\t\twake() {\n\t\t\ttry {\n\t\t\t\tif( this.cursor > $mol_fiber_status.actual ) return this.get()\n\t\t\t} catch( error ) {\n\t\t\t\tif( 'then' in error ) return\n\t\t\t\t$mol_fail_hidden( error )\n\t\t\t}\n\t\t}\n\n\t\tpush( value : Value ) {\n\t\t\t\n\t\t\tvalue = this.$.$mol_conform( value , this.value )\n\t\t\t\n\t\t\tif( this.error || !Object.is( this.value , value ) ) {\n\t\t\n\t\t\t\tthis.$.$mol_log2.info( this , $mol_fiber_token_changed1 , value , $mol_fiber_token_changed2 , this.error || this.value )\n\t\t\t\t\n\t\t\t\tthis.obsolete_slaves()\n\t\t\t\t\n\t\t\t\tthis.forget()\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\tthis.$.$mol_log2.info( this , $mol_fiber_token_actualized , value )\n\t\t\t}\n\t\t\t\n\t\t\tthis.error = null\n\t\t\tthis.value = value\n\t\t\t\n\t\t\tthis.complete()\n\n\t\t\treturn value\n\t\t}\n\n\t\tfail( error : Error | PromiseLike< Value > ) : Error | PromiseLike< Value > {\n\t\t\t\n\t\t\tthis.complete()\t\n\t\t\t\n\t\t\tthis.$.$mol_log2.info( this , $mol_fiber_token_failed , error )\n\t\t\t\n\t\t\tthis.error = error\n\n\t\t\tthis.obsolete_slaves()\n\n\t\t\treturn error\n\t\t}\n\n\t\twait( promise : PromiseLike< Value > ) : PromiseLike< Value > {\n\t\t\tthis.error = promise\n\t\t\tthis.$.$mol_log2.info( this , $mol_fiber_token_sleeped , promise )\n\t\t\tthis.cursor = $mol_fiber_status.obsolete\n\t\t\treturn promise\n\t\t}\n\n\t\tcomplete() {\n\n\t\t\tif( this.cursor <= $mol_fiber_status.actual ) return\n\n\t\t\tfor( let index = 0 ; index < this.masters.length ; index += 2  ) {\n\t\t\t\tthis.complete_master( index )\n\t\t\t}\n\t\t\t\n\t\t\tthis.cursor = $mol_fiber_status.actual\n\t\t}\n\t\t\n\t\tcomplete_master( master_index : number ) {\n\t\t\tthis.disobey( master_index )\n\t\t}\n\n\t\tpull() {\n\t\t\tthis.push( this.calculate() )\n\t\t}\n\n\t\t@ $mol_log2_indent.method\n\t\tupdate() {\n\n\t\t\tconst slave = $mol_fiber.current\n\t\t\t\n\t\t\ttry {\n\t\t\t\t\t\n\t\t\t\t// this.limit()\n\t\t\t\t\n\t\t\t\t$mol_fiber.current = this\n\n\t\t\t\tthis.$.$mol_log2.info( this , $mol_fiber_token_runned )\n\n\t\t\t\tthis.pull()\n\n\t\t\t} catch( error ) {\n\n\t\t\t\tif( 'then' in error ) {\n\t\t\t\t\t\n\t\t\t\t\tif( !slave ) {\n\t\t\t\t\t\tconst listener = ()=> this.wake()\n\t\t\t\t\t\terror = error.then( listener , listener )\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.wait( error )\n\n\t\t\t\t} else {\n\t\t\t\t\tthis.fail( error )\n\t\t\t\t}\n\n\t\t\t} finally {\n\t\t\t\t$mol_fiber.current = slave\n\t\t\t}\n\n\t\t}\n\n\t\tget() {\n\n\t\t\tif( this.cursor > $mol_fiber_status.obsolete ) {\n\t\t\t\tthis.$.$mol_fail( new Error( `Cyclic dependency at ${ this }` ) )\n\t\t\t}\n\t\t\t\n\t\t\tconst slave = $mol_fiber.current\n\t\t\tif( slave ) slave.master = this\n\t\t\t\n\t\t\tif( this.cursor > $mol_fiber_status.actual ) this.update()\n\n\t\t\tif( this.error ) return this.$.$mol_fail_hidden( this.error )\n\t\t\t\n\t\t\treturn this.value\n\n\t\t}\n\n\t\tlimit() {\n\n\t\t\tif( !$mol_fiber.deadline ) return\n\t\t\tif( !$mol_fiber.current ) return\n\n\t\t\tif( Date.now() < $mol_fiber.deadline ) return\n\n\t\t\tthis.$.$mol_fail_hidden( $mol_fiber.schedule() )\n\t\t}\n\n\t\tget master() {\n\t\t\treturn this.masters[ this.cursor ] as $mol_fiber\n\t\t}\n\t\tset master( next : $mol_fiber ) {\n\n\t\t\tif( this.cursor === $mol_fiber_status.doubt ) return\n\t\t\t\n\t\t\tconst cursor = this.cursor\n\t\t\tconst prev = this.masters[ this.cursor ]\n\t\t\t\n\t\t\tif( prev !== next ) {\n\t\t\t\tif( prev ) this.rescue( prev as $mol_fiber , cursor )\n\t\t\t\tthis.masters[ cursor ] = next\n\t\t\t\tthis.masters[ cursor + 1 ] = this.obey( next , cursor )\n\t\t\t}\n\t\t\t\n\t\t\tthis.cursor = cursor + 2\n\t\t}\n\n\t\trescue( master : $mol_fiber , master_index : number ) {}\n\n\t\tobey( master : $mol_fiber , master_index : number ) { return -1 }\n\t\tlead( slave : $mol_fiber , master_index : number ) { return -1 }\n\n\t\tdislead( slave_index : number ) {\n\t\t\tthis.destructor()\n\t\t}\n\n\t\tdisobey( master_index : number ) {\n\t\t\t\n\t\t\tconst master = this.masters[ master_index ] as $mol_fiber\n\t\t\tif( !master ) return\n\n\t\t\tmaster.dislead( this.masters[ master_index + 1 ] as number )\n\t\t\t\n\t\t\tthis.masters[ master_index ] = undefined\n\t\t\tthis.masters[ master_index + 1 ] = undefined\n\n\t\t\tthis.$.$mol_array_trim( this.masters )\n\n\t\t}\n\n\t\tobsolete_slaves() { }\n\n\t\tobsolete( master_index : number ) { }\n\n\t\tforget() {\n\t\t\tthis.value = undefined as unknown as Value\n\t\t}\n\n\t\tabort() {\n\t\t\tthis.forget()\n\t\t\treturn true\n\t\t}\n\n\t\tdestructor() {\n\t\t\tif( !this.abort() ) return\n\t\t\t\n\t\t\tthis.$.$mol_log2.info( this , $mol_fiber_token_destructed )\n\t\t\tthis.complete()\n\t\t}\n\n\t\t[ $mol_dev_format_head ]() {\n\t\t\treturn $mol_dev_format_native( this )\n\t\t}\n\n\t}\n\n\texport let $mol_fiber_token_runned = new $mol_log2_token( ' ► ' )\n\texport let $mol_fiber_token_changed1 = new $mol_log2_token( ' ˸ ' )\n\texport let $mol_fiber_token_changed2 = new $mol_log2_token( ' 🠈 ' )\n\texport let $mol_fiber_token_actualized = new $mol_log2_token( ' ✓ ' )\n\texport let $mol_fiber_token_sleeped = new $mol_log2_token( ' 💤 ' )\n\texport let $mol_fiber_token_failed = new $mol_log2_token( ' 🔥 ' )\n\texport let $mol_fiber_token_destructed = new $mol_log2_token( ' 🕱 ' )\n\n\t$mol_log2_legend.info( $mol_fiber_token_runned , '$mol_fiber starts execution' )\n\t$mol_log2_legend.info( new $mol_log2_line( $mol_fiber_token_changed1 , $mol_fiber_token_changed2 ) , '$mol_fiber value is changed to different value' )\n\t$mol_log2_legend.info( $mol_fiber_token_actualized , 'Actual $mol_fiber value is same as before' )\n\t$mol_log2_legend.info( $mol_fiber_token_sleeped , '$mol_fiber can not run now and awaits on promise' )\n\t$mol_log2_legend.info( $mol_fiber_token_failed , '$mol_fiber is failed and will be throw an Error or Promise' )\n\t$mol_log2_legend.info( $mol_fiber_token_destructed , '$mol_fiber fully destructed' )\n\n}\n","namespace $ {\n\n\t$mol_test_mocks.push( async $ => {\n\t\tawait $mol_fiber_warp()\n\t\t$mol_fiber.deadline = Date.now() + 100\n\t} )\n\t\n}\n","namespace $ {\n\n\texport namespace $$ { let $ }\n\n\texport const $mol_object_field = Symbol( '$mol_object_field' )\n\t\n\texport class $mol_object extends $mol_object2 {\n\t\t\n\t\tpublic static make< Instance >( this : { new() : Instance } , config : Partial< Instance > ) : Instance {\n\t\t\treturn super.create( obj => {\n\t\t\t\tfor( let key in config ) ( obj as any )[ key ] = config[ key ]!\n\t\t\t} ) as any\n\t\t}\n\t\t\n\t}\n\n}\n","namespace $ {\n\t$mol_test( {\n\t\t\n\t\t'init with overload'() {\n\t\t\tclass X extends $mol_object {\n\t\t\t\tfoo() {\n\t\t\t\t\treturn 1\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar x = X.make({\n\t\t\t\tfoo : ()=> 2 ,\n\t\t\t})\n\t\t\t\n\t\t\t$mol_assert_equal( x.foo() , 2 )\n\t\t} ,\n\t\t\t\n\t} )\n}\n","namespace $ {\n\n\texport class $mol_after_timeout extends $mol_object2 {\n\n\t\tid : any\n\n\t\tconstructor(\n\t\t\tpublic delay : number ,\n\t\t\tpublic task : ()=> void ,\n\t\t) {\n\t\t\tsuper()\n\t\t\tthis.id = setTimeout( task , delay )\n\t\t}\n\n\t\tdestructor() {\n\t\t\tclearTimeout( this.id )\n\t\t}\n\n\t}\n\t\n}\n","namespace $ {\n\n\t$mol_test_mocks.push( $ => {\n\t\t$.$mol_after_timeout = $mol_after_mock_timeout as any as typeof $mol_after_timeout\n\t})\n\n}\n","namespace $ {\n\n\texport class $mol_after_frame extends $mol_after_timeout {\n\n\t\tconstructor(\n\t\t\tpublic task : ()=> void ,\n\t\t) {\n\t\t\tsuper( 16 , task )\n\t\t}\n\n\t}\n\t\n}\n","namespace $ {\n\n\t$mol_test_mocks.push( $ => {\n\t\t$.$mol_after_frame = $mol_after_mock_commmon as any as typeof $mol_after_frame\n\t})\n\n}\n","namespace $ {\n\n\texport function $mol_atom2_value< Value >( task : ()=> Value ) : Value | undefined {\n\t\tconst cached = $mol_atom2.cached\n\t\ttry {\n\t\t\t$mol_atom2.cached = true\n\t\t\treturn task()\n\t\t} finally {\n\t\t\t$mol_atom2.cached = cached\n\t\t}\n\t}\n\n\texport class $mol_atom2< Value = any > extends $mol_fiber< Value > {\n\n\t\tstatic get current() {\n\t\t\tconst atom = $mol_fiber.current\n\t\t\tif( atom instanceof $mol_atom2 ) return atom\n\t\t\treturn null\n\t\t}\n\n\t\tstatic cached = false\n\n\t\tstatic reap_task = null as null | $mol_fiber\n\t\tstatic reap_queue = [] as $mol_atom2[]\n\n\t\tstatic reap( atom : $mol_atom2 ) {\n\n\t\t\tthis.reap_queue.push( atom )\n\n\t\t\tif( this.reap_task ) return\n\n\t\t\tthis.reap_task = $mol_fiber_defer( ()=> {\n\t\t\t\tthis.reap_task = null\n\t\t\t\t\n\t\t\t\twhile( true ) {\n\t\t\t\t\t\n\t\t\t\t\tconst atom = this.reap_queue.pop()\n\t\t\t\t\tif( !atom ) break\n\t\t\t\t\t\n\t\t\t\t\tif( !atom.alone ) continue\n\t\t\t\t\t\n\t\t\t\t\tatom.destructor()\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} )\n\n\t\t}\n\n\t\tslaves = [] as ( $mol_fiber | number | undefined )[]\n\t\t\n\t\trescue( master : $mol_atom2 , cursor : number ) {\n\n\t\t\tif(!( master instanceof $mol_atom2 )) return\n\t\t\t\n\t\t\tconst master_index = this.masters.length\n\t\t\tconst slave_index = this.masters[ cursor + 1 ] as number + 1\n\t\t\t\n\t\t\tmaster.slaves[ slave_index ] = master_index\n\t\t\tthis.masters.push( master , this.masters[ cursor + 1 ] )\n\t\t\t\n\t\t}\n\n\t\tget() {\n\t\t\tif( $mol_atom2.cached ) return this.value\n\t\t\t\n\t\t\tconst value = super.get()\n\t\t\tif( value === undefined ) $mol_fail( new Error( `Not defined: ${ this }` ) )\n\t\t\t\n\t\t\treturn value\n\t\t}\n\n\t\tpull() {\n\t\t\t\n\t\t\tif( this.cursor === $mol_fiber_status.obsolete ) return super.pull()\n\n\t\t\tthis.$.$mol_log2.info( this , $mol_atom2_token_revalidation )\n\t\t\t\n\t\t\tconst masters = this.masters\n\n\t\t\tfor( let index = 0 ; index < masters.length ; index += 2 ) {\n\n\t\t\t\tconst master = masters[ index ] as $mol_atom2\n\t\t\t\tif( !master ) continue\n\n\t\t\t\ttry {\n\t\t\t\t\tmaster.get()\n\t\t\t\t} catch( error ) {\n\t\t\t\t\tif( 'then' in error ) $mol_fail_hidden( error )\n\t\t\t\t\tthis.cursor = $mol_fiber_status.obsolete\n\t\t\t\t}\n\n\t\t\t\tif( this.cursor as $mol_fiber_status !== $mol_fiber_status.obsolete ) continue\n\n\t\t\t\tthis.$.$mol_log2.info( this , $mol_atom2_token_stumbled , this._error || this._value )\n\t\t\t\treturn super.pull()\n\t\t\t}\n\n\t\t\tthis.$.$mol_log2.info( this , $mol_atom2_token_revalidated , this._error || this._value )\n\t\t\tthis.cursor = $mol_fiber_status.actual\n\n\t\t}\n\t\t\n\t\t_value = undefined as unknown as Value\n\t\tget value() { return this._value }\n\t\tset value( next : Value ) {\n\n\t\t\tconst prev = this._value\n\n\t\t\tif( prev && this.$.$mol_owning_check( this , prev ) ) prev.destructor()\n\n\t\t\tif( next && this.$.$mol_owning_catch( this , next ) ) {\n\t\t\t\tnext[ Symbol.toStringTag ] = this[ Symbol.toStringTag ]\n\t\t\t\tnext[ $mol_object_field ] = this[ $mol_object_field ]\n\t\t\t}\n\n\t\t\tthis._value = next\n\t\t}\n\n\t\t_error = null as null | Error | PromiseLike< Value >\n\t\tget error() { return this._error }\n\t\tset error( next : null | Error | PromiseLike< Value > ) {\n\n\t\t\tconst prev = this._error\n\n\t\t\tif( prev && this.$.$mol_owning_check( this , prev ) ) prev.destructor()\n\n\t\t\tif( next && this.$.$mol_owning_catch( this , next ) ) {\n\t\t\t\tnext[ Symbol.toStringTag ] = this[ Symbol.toStringTag ]\n\t\t\t\tnext[ $mol_object_field ] = this[ $mol_object_field ]\n\t\t\t}\n\n\t\t\tthis._error = next\n\t\t}\n\n\t\tput( next : Value ) {\n\t\t\tthis.cursor = this.masters.length\n\t\t\tnext = this.push( next )\n\t\t\tthis.cursor = $mol_fiber_status.persist\n\t\t\treturn next\n\t\t}\n\n\t\tcomplete_master( master_index : number ) {\n\t\t\tif( this.masters[ master_index ] instanceof $mol_atom2 ) {\n\t\t\t\tif( master_index >= this.cursor ) this.disobey( master_index )\n\t\t\t} else {\n\t\t\t\tthis.disobey( master_index )\n\t\t\t}\n\t\t}\n\n\t\tobey( master : $mol_fiber , master_index : number ) : number {\n\t\t\treturn master.lead( this , master_index )\n\t\t}\n\n\t\tlead( slave : $mol_fiber , master_index : number ) {\n\t\t\t\n\t\t\tthis.$.$mol_log2.info( this , $mol_atom2_token_leaded , slave )\n\t\t\t\n\t\t\tconst slave_index = this.slaves.length\n\t\t\tthis.slaves[ slave_index ] = slave\n\t\t\tthis.slaves[ slave_index + 1 ] = master_index\n\t\t\t\n\t\t\treturn slave_index\n\t\t}\n\n\t\tdislead( slave_index : number ) {\n\n\t\t\tif( slave_index < 0 ) return // slave is fiber\n\t\t\t\n\t\t\tthis.$.$mol_log2.info( this , $mol_atom2_token_disleaded , this.slaves[ slave_index ] )\n\n\t\t\tthis.slaves[ slave_index ] = undefined\n\t\t\tthis.slaves[ slave_index + 1 ] = undefined\n\n\t\t\t$mol_array_trim( this.slaves )\n\n\t\t\tif( this.cursor > $mol_fiber_status.persist && this.alone ) $mol_atom2.reap( this )\n\t\t}\n\n\t\tobsolete( master_index = -1 ) {\n\n\t\t\tif( this.cursor > $mol_fiber_status.obsolete ) {\n\t\t\t\tif( master_index >= this.cursor - 2 ) return\n\n\t\t\t\tconst path = [] as $mol_atom2[]\n\t\t\t\tlet current = this as $mol_atom2\n\t\t\t\t\n\t\t\t\tcollect : while( current ) {\n\t\t\t\t\tpath.push( current )\n\t\t\t\t\tcurrent = current.masters[ current.cursor - 2 ] as $mol_atom2\n\t\t\t\t}\n\n\t\t\t\tthis.$.$mol_fail( new Error( `Obsoleted while calculation \\n\\n${ path.join( '\\n' ) }\\n` ) )\n\t\t\t}\n\t\t\t\n\t\t\tif( this.cursor === $mol_fiber_status.obsolete ) return\n\t\t\t\n\t\t\tthis.$.$mol_log2.info( this , $mol_atom2_token_obsoleted , this._error || this._value )\n\t\t\tif( this.cursor !== $mol_fiber_status.doubt ) this.doubt_slaves()\n\t\t\t\n\t\t\tthis.cursor = $mol_fiber_status.obsolete\n\t\t\t\n\t\t}\n\n\t\tdoubt( master_index = -1 ) {\n\t\t\t\n\t\t\tif( this.cursor > $mol_fiber_status.obsolete ) {\n\t\t\t\tif( master_index >= this.cursor - 2 ) return\n\n\t\t\t\tconst path = [] as $mol_atom2[]\n\t\t\t\tlet current = this as $mol_atom2\n\t\t\t\t\n\t\t\t\tcollect : while( current ) {\n\t\t\t\t\tpath.push( current )\n\t\t\t\t\tcurrent = current.masters[ current.cursor - 2 ] as $mol_atom2\n\t\t\t\t}\n\n\t\t\t\tthis.$.$mol_fail( new Error( `Doubted while calculation \\n\\n${ path.join( '\\n' ) }\\n` ) )\n\t\t\t}\n\t\t\t\n\t\t\tif( this.cursor >= $mol_fiber_status.doubt ) return\n\t\t\t\t\n\t\t\tthis.$.$mol_log2.info( this , $mol_atom2_token_doubted , this._error || this._value )\n\t\t\tthis.cursor = $mol_fiber_status.doubt\n\t\t\t\n\t\t\tthis.doubt_slaves()\n\n\t\t}\n\n\t\t@ $mol_log2_indent.method\n\t\tobsolete_slaves() {\n\t\t\tfor( let index = 0 ; index < this.slaves.length ; index += 2 ) {\n\t\t\t\tconst slave = this.slaves[ index ] as $mol_atom2\n\t\t\t\tif( slave ) slave.obsolete( this.slaves[ index + 1 ] as number )\n\t\t\t}\n\t\t}\n\n\t\t@ $mol_log2_indent.method\n\t\tdoubt_slaves() {\n\t\t\tfor( let index = 0 ; index < this.slaves.length ; index += 2 ) {\n\t\t\t\tconst slave = this.slaves[ index ] as $mol_atom2\n\t\t\t\tif( slave ) slave.doubt( this.slaves[ index + 1 ] as number )\n\t\t\t}\n\t\t}\n\n\t\tget fresh() {\n\t\t\treturn $mol_log2_hidden.func( ()=> {\n\t\t\t\tif( this.cursor !== $mol_fiber_status.actual ) return\n\n\t\t\t\tthis.cursor = $mol_fiber_status.obsolete\n\t\t\t\t$mol_fiber_solid.run( ()=> this.update() )\n\t\t\t} )\n\t\t}\n\n\t\tget alone() {\n\t\t\treturn this.slaves.length === 0\n\t\t}\n\t\t\n\t\tget derived() {\n\t\t\t\n\t\t\tfor( let index = 0 ; index < this.masters.length ; index += 2 ) {\n\t\t\t\tif( this.masters[ index ] ) return true\n\t\t\t}\n\n\t\t\treturn false\n\t\t}\n\n\t\tdestructor() {\n\n\t\t\tif( !this.abort() ) return\n\t\t\t\n\t\t\tthis.$.$mol_log2.info( this , $mol_fiber_token_destructed )\n\n\t\t\tthis.cursor = $mol_fiber_status.persist\n\n\t\t\tfor( let index = 0 ; index < this.masters.length ; index += 2 ) {\n\t\t\t\tthis.complete_master( index )\n\t\t\t}\n\n\t\t}\n\t\t\n\t}\n\n\texport let $mol_atom2_token_revalidation = new $mol_log2_token( ' ⏭ ' )\n\texport let $mol_atom2_token_stumbled = new $mol_log2_token( ' ⏯ ' )\n\texport let $mol_atom2_token_revalidated = new $mol_log2_token( ' ✔ ' )\n\texport let $mol_atom2_token_leaded = new $mol_log2_token( ' ☍ ' )\n\texport let $mol_atom2_token_disleaded = new $mol_log2_token( ' ☌ ' )\n\texport let $mol_atom2_token_obsoleted = new $mol_log2_token( ' ✘ ' )\n\texport let $mol_atom2_token_doubted = new $mol_log2_token( ' � ' )\n\n\t$mol_log2_legend.info( $mol_atom2_token_revalidation , '$mol_atom2 starts masters cheking for changes' )\n\t$mol_log2_legend.info( $mol_atom2_token_stumbled , '$mol_atom2 is obsoleted while masters checking' )\n\t$mol_log2_legend.info( $mol_atom2_token_revalidated , '$mol_atom2 is actual becasue there is no changed masters' )\n\t$mol_log2_legend.info( $mol_atom2_token_leaded , '$mol_atom2 leads some slave' )\n\t$mol_log2_legend.info( $mol_atom2_token_disleaded , '$mol_atom2 disleads some slave' )\n\t$mol_log2_legend.info( $mol_atom2_token_obsoleted , '$mol_atom2 is obsoleted because some master is changed' )\n\t$mol_log2_legend.info( $mol_atom2_token_doubted , '$mol_atom2 is doubted because some master is doubted or obsoleted' )\n\n}\n","module $ {\n\n\t$mol_test({\n\n\t\t'Value has js-path name' () {\n\n\t\t\tclass App extends $mol_object2 {\n\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic get title() { return new $mol_object2 }\n\n\t\t\t}\n\n\t\t\t$mol_assert_equal( `${ App.title }` , 'App.title' )\n\n\t\t} ,\n\n\t\t'Simple property' () {\n\n\t\t\tclass App extends $mol_object2 {\n\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic value = 1\n\n\t\t\t}\n\n\t\t\t$mol_assert_equal( App.value , 1 )\n\n\t\t\tApp.value = 2\n\t\t\t$mol_assert_equal( App.value , 2 )\n\n\t\t} ,\n\n\t\t'Instant actualization' () {\n\n\t\t\tclass Source extends $mol_object2 {\n\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tvalue = 1\n\n\t\t\t}\n\n\t\t\tclass App extends $mol_object2 {\n\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic get source() { return Source.create() }\n\t\t\t\t\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic get value() { return this.source.value + 1 }\n\t\t\t\t\n\t\t\t}\n\n\t\t\t$mol_assert_equal( App.value , 2 )\n\n\t\t\tApp.source.value = 2\n\t\t\t$mol_assert_equal( App.value , 3 )\n\n\t\t} ,\n\n\t\t'Access to cached value' () {\n\n\t\t\tclass App extends $mol_object2 {\n\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic get value() { return 1 }\n\n\t\t\t}\n\n\t\t\t$mol_assert_equal( $mol_atom2_value( ()=> App.value ) , undefined )\n\n\t\t\t$mol_assert_equal( App.value , 1 )\n\t\t\t$mol_assert_equal( $mol_atom2_value( ()=> App.value ) , 1 )\n\n\t\t} ,\n\n\t\t'Do not recalc slaves on equal changes' () {\n\n\t\t\tclass App extends $mol_object2 {\n\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic first = [1]\n\n\t\t\t\tstatic counter = 0\n\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic get result() { return this.first[0] + this.counter++ }\n\t\t\t\t\n\t\t\t}\n\n\t\t\t$mol_assert_equal( App.result , 1 )\n\n\t\t\tApp.first = [1]\n\t\t\t$mol_assert_equal( App.result , 1 )\n\n\t\t} ,\n\n\t\t'Do not recalc grand slave on equal direct slave result ' () {\n\n\t\t\tclass App extends $mol_object2 {\n\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic first = 1\n\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic get second() { return Math.abs( this.first ) }\n\n\t\t\t\tstatic counter = 0\n\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic get result() { return this.second + ++this.counter }\n\t\t\t\t\n\t\t\t}\n\n\t\t\t$mol_assert_equal( App.result , 2 )\n\n\t\t\tApp.first = -1\n\t\t\t$mol_assert_equal( App.result , 2 )\n\n\t\t} ,\n\n\t\t'Recalc when [not changed master] changes [following master]' () {\n\n\t\t\tclass App extends $mol_object2 {\n\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic first = 1\n\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic get second() {\n\t\t\t\t\tthis.third = this.first\n\t\t\t\t\treturn 0\n\t\t\t\t}\n\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic third = 0\n\n\t\t\t\tstatic counter = 0\n\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic get result() { return this.second + this.third + ++this.counter }\n\t\t\t\t\n\t\t\t}\n\n\t\t\t$mol_assert_equal( App.result , 2 )\n\n\t\t\tApp.first = 5\n\t\t\t$mol_assert_equal( App.result , 7 )\n\n\t\t} ,\n\n\t\t'Branch switching' () {\n\n\t\t\tclass App extends $mol_object2 {\n\t\t\t\t\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic first = 1\n\t\t\t\t\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic get second() { return 2 }\n\t\t\t\t\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic condition = true\n\t\t\t\t\n\t\t\t\tstatic counter = 0\n\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic get result() {\n\t\t\t\t\treturn ( this.condition ? this.first : this.second ) + this.counter++\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\n\t\t\t$mol_assert_equal( App.result , 1 )\n\n\t\t\tApp.condition = false\n\t\t\t$mol_assert_equal( App.result , 3 )\n\n\t\t\tApp.first = 10\n\t\t\t$mol_assert_equal( App.result , 3 )\n\n\t\t} ,\n\n\t\t'Forbidden self invalidation' () {\n\n\t\t\tclass App extends $mol_object2 {\n\t\t\t\t\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic first = 1\n\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic get second() { return this.first + 1 }\n\t\t\t\t\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic get result() {\n\t\t\t\t\tthis.second\n\t\t\t\t\treturn this.first ++\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\n\t\t\t$mol_assert_fail( ()=> App.result )\n\n\t\t} ,\n\n\t\t'Side effect inside computation' () {\n\n\t\t\tclass App extends $mol_object2 {\n\t\t\t\t\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic first = 1\n\n\t\t\t\t@ $mol_fiber.method\n\t\t\t\tstatic increase() { return ++ this.first }\n\t\t\t\t\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic get result() {\n\t\t\t\t\treturn this.increase() + 1\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\n\t\t\t$mol_assert_equal( App.result , 3 )\n\n\t\t} ,\n\n\t\t'Forbidden cyclic dependency' () {\n\n\t\t\tclass App extends $mol_object2 {\n\t\t\t\t\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic get first() : number { return this.second - 1 }\n\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic get second() : number { return this.first + 1 }\n\t\t\t\t\n\t\t\t}\n\n\t\t\t$mol_assert_fail( ()=> App.first )\n\n\t\t} ,\n\n\t\t'Forget sub fibers on complete' () {\n\n\t\t\tclass App extends $mol_object2 {\n\n\t\t\t\tstatic counter = 0\n\n\t\t\t\t@ $mol_fiber.method\n\t\t\t\tstatic count() { return this.counter ++ }\n\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic data = 1\n\t\t\t\t\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic get result() { return this.count() + this.data }\n\t\t\t\t\n\t\t\t}\n\n\t\t\t$mol_assert_equal( App.result , 1 )\n\n\t\t\tApp.data = 2\n\t\t\t$mol_assert_equal( App.result , 3 )\n\n\t\t} ,\n\n\t\tasync 'Automatic destroy owned value on self destruction' () {\n\n\t\t\tlet counter = 0\n\n\t\t\tclass Having extends $mol_object2 {\n\t\t\t\tdestructor() { counter++ }\n\t\t\t}\n\n\t\t\tclass App extends $mol_object2 {\n\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic get having() { return Having.create() }\n\t\t\t\t\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic condition = true\n\t\t\t\t\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic get result() {\n\t\t\t\t\tif( this.condition ) this.having\n\t\t\t\t\treturn 0\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\n\t\t\tApp.result\n\t\t\tApp.condition = false\n\t\t\tApp.result\n\n\t\t\t$mol_assert_equal( counter , 0 )\n\n\t\t\tawait $mol_fiber_warp()\n\t\t\t$mol_assert_equal( counter , 1 )\n\n\t\t} ,\n\n\t\tasync 'Do not destroy putted value' () {\n\n\t\t\tclass App extends $mol_object2 {\n\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic source : number\n\t\t\t\t\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic condition = true\n\t\t\t\t\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic get target() {\n\t\t\t\t\treturn this.condition ? this.source : 0\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\n\t\t\tApp.source = 1\n\t\t\t$mol_assert_equal( App.target , 1 )\n\t\t\t\n\t\t\tApp.condition = false\n\t\t\t$mol_assert_equal( App.target , 0 )\n\t\t\tawait $mol_fiber_warp()\n\t\t\t\n\t\t\tApp.condition = true\n\t\t\t$mol_assert_equal( App.target , 1 )\n\n\t\t} ,\n\n\t\t'Restore after error' () {\n\n\t\t\tclass App extends $mol_object2 {\n\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic condition = false\n\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic get broken() {\n\t\t\t\t\tif( this.condition ) $mol_fail( new Error( 'test error' ) )\n\t\t\t\t\treturn 1\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic get result() { return this.broken }\n\t\t\t\t\n\t\t\t}\n\n\t\t\t$mol_assert_equal( App.result , 1 )\n\t\t\t\n\t\t\tApp.condition = true\n\t\t\t$mol_assert_fail( ()=> App.result )\n\t\t\t\n\t\t\tApp.condition = false\n\t\t\t$mol_assert_equal( App.result , 1 )\n\n\t\t} ,\n\t\n\t\tasync 'auto fresh only when alive'( $ ) {\n\n\t\t\tlet state = 1\n\n\t\t\tconst monitor = new $.$mol_atom2\n\t\t\tmonitor.calculate = ()=> {\n\t\t\t\tnew $.$mol_after_frame( $mol_atom2.current!.fresh )\n\t\t\t\treturn state\n\t\t\t}\n\t\t\t$mol_assert_equal( monitor.get() , 1 )\n\t\t\t\n\t\t\tstate = 2\n\t\t\t$mol_assert_equal( monitor.get() , 1 )\n\t\t\t\t\n\t\t\t$.$mol_after_mock_warp()\n\t\t\t$mol_assert_equal( monitor.get() , 2 )\n\t\t\t\n\t\t\tstate = 3\n\t\t\t$mol_assert_equal( monitor.get() , 2 )\n\t\t\t\n\t\t\tmonitor.destructor()\n\t\t\t$mol_assert_equal( monitor.value , undefined )\n\t\t\t\n\t\t\t$.$mol_after_mock_warp()\n\t\t\tawait $.$mol_fiber_warp()\n\t\t\t$mol_assert_equal( monitor.value , undefined )\n\t\t\t\n\t\t} ,\n\n\t// \t'thenable interface: wait for value' () {\n\t// \t\t$mol_fiber_warp()\n\t\t\t\n\t// \t\tconst source = new $mol_atom2( 'source', ()=> {\n\t// \t\t\treturn $mol_fiber_async<number>( back => {\n\t// \t\t\t\tnew $mol_defer( back( ()=> 777 ) )\n\t// \t\t\t} )\n\t// \t\t} )\n\n\t// \t\tconst target = source.then( val => val.toString() )\n\t\t\t\n\t// \t\t$mol_assert_fail( ()=> target.value().valueOf() , $mol_fiber_wait.constructor )\n\n\t// \t\t$mol_defer.run() ; $mol_fiber_warp() ; $mol_atom2.sync()\n\n\t// \t\t$mol_assert_equal( target.value() , '777' )\n\t// \t} ,\n\t\t\n\t// \t'thenable interface: negative' () {\n\t// \t\t$mol_fiber_warp()\n\t\t\t\n\t// \t\tconst TestError = class extends Error {}\n\n\t// \t\tconst source = new $mol_atom2( 'source', ()=> {\n\t// \t\t\treturn $mol_fiber_async<number>( back => {\n\t// \t\t\t\tnew $mol_defer( back( ()=> {\n\t// \t\t\t\t\tthrow new TestError( 'Test error' )\n\t// \t\t\t\t} ) )\n\t// \t\t\t} )\n\t// \t\t} )\n\n\t// \t\tconst target = source.then( val => val.toString() )\n\t\t\t\n\t// \t\t$mol_assert_fail( ()=> target.value().valueOf() , $mol_fiber_wait.constructor )\n\t\t\t\n\t// \t\t$mol_defer.run()\n\t\t\t\n\t// \t\t$mol_assert_fail( ()=> { $mol_fiber_warp() } , TestError )\n\t// \t\t$mol_assert_fail( ()=> { $mol_fiber_warp() } , TestError )\n\t// \t\t$mol_assert_fail( ()=> { $mol_fiber_warp() } , TestError )\n\t// \t\t$mol_assert_fail( ()=> { $mol_fiber_warp() } , TestError )\n\n\t// \t\t$mol_assert_fail( ()=> target.value().valueOf() , TestError )\n\t// \t} ,\n\t\t\n\t})\n\t\n}\n","namespace $ {\n\n\texport class $mol_mem_force extends Object {\n\t\tconstructor(){ super() }\n\t\t$mol_mem_force = true\n\t\tstatic $mol_mem_force = true\n\t\tstatic toString() { return this.name }\n\t}\n\n\texport class $mol_mem_force_cache extends $mol_mem_force {}\n\texport class $mol_mem_force_update extends $mol_mem_force {}\n\texport class $mol_mem_force_fail extends $mol_mem_force_cache {}\n\n}\n","namespace $ {\n\t\n\texport class $mol_defer extends $mol_object {\n\t\t\n\t\tconstructor( public run : ()=> void ) {\n\t\t\tsuper()\n\t\t\t$mol_defer.add( this )\n\t\t}\n\t\t\n\t\tdestructor() {\n\t\t\t$mol_defer.drop( this )\n\t\t}\n\t\t\n\t\tstatic all : $mol_defer[] = []\n\t\tstatic timer = null as any\n\t\t\n\t\tstatic scheduleNative : ( handler : ()=> void ) => any = ( typeof requestAnimationFrame == 'function' )\n\t\t\t? handler => requestAnimationFrame( handler )\n\t\t\t: handler => setTimeout( handler , 16 )\n\t\t\n\t\tstatic schedule() {\n\t\t\tif( this.timer ) return\n\t\t\t\n\t\t\tthis.timer = this.scheduleNative( ()=> {\n\t\t\t\tthis.timer = null\n\t\t\t\tthis.run()\n\t\t\t} )\n\t\t}\n\t\t\n\t\tstatic unschedule() {\n\t\t\tif( !this.timer ) return\n\t\t\t\n\t\t\tcancelAnimationFrame( this.timer )\n\t\t\tthis.timer = null\n\t\t}\n\t\t\n\t\tstatic add( defer : $mol_defer ) {\n\t\t\tthis.all.push( defer )\n\t\t\tthis.schedule()\n\t\t}\n\t\t\n\t\tstatic drop( defer : $mol_defer ) {\n\t\t\tvar index = this.all.indexOf( defer )\n\t\t\tif( index >= 0 ) this.all.splice( index , 1 )\n\t\t}\n\t\t\n\t\tstatic run() {\n\t\t\tif( this.all.length === 0 ) return\n\t\t\tthis.schedule()\n\t\t\tfor( var defer : $mol_defer | undefined ; defer = this.all.shift() ; ) defer.run()\n\t\t\t//this.unschedule()\n\t\t}\n\t\t\n\t}\n\n}\n","namespace $ {\n\n\texport let $mol_mem_cached = $mol_atom2_value\n\n\texport function $mol_mem_persist() {\n\n\t\tconst atom = $mol_atom2.current\n\t\tif( !atom ) return\n\t\t\n\t\tif( atom.hasOwnProperty( 'destructor' ) ) return\n\t\t\n\t\tatom.destructor = ()=> {}\n\t\t\n\t}\n\n\texport function $mol_mem<\n\t\tHost extends object ,\n\t\tField extends keyof Host ,\n\t\tValue ,\n\t>(\n\t\tproto : Host ,\n\t\tname : Field ,\n\t\tdescr? : TypedPropertyDescriptor< ( next? : Value , force? : $mol_mem_force )=> Value >\n\t) : any {\n\n\t\tconst value = descr!.value!\n\t\t\n\t\tconst store = new WeakMap< Host , $mol_atom2< Value > >()\n\n\t\tObject.defineProperty( proto , name + \"()\" , {\n\t\t\tget : function() {\n\t\t\t\treturn store.get( this )\n\t\t\t}\n\t\t} )\n\n\t\tconst get_cache = ( host : Host )=> {\n\t\t\t\n\t\t\tlet cache = store.get( host )!\n\t\t\tif( cache ) return cache\n\n\t\t\tlet cache2 = new $mol_atom2\n\t\t\tcache2.calculate = value.bind( host )\n\t\t\tcache2[ Symbol.toStringTag ] = `${ host }.${ name }()`\n\t\t\tcache2.abort = ()=> {\n\t\t\t\tstore.delete( host )\n\t\t\t\tcache2.forget()\n\t\t\t\treturn true\n\t\t\t}\n\t\t\t$mol_owning_catch( host , cache2 )\n\t\t\tcache2[ $mol_object_field ] = name\n\t\t\tstore.set( host , cache2 )\n\n\t\t\treturn cache2\n\t\t}\n\t\t\n\t\treturn {\n\n\t\t\t... descr || {} ,\n\t\t\t\n\t\t\tvalue( this : Host , next? : Value , force? : $mol_mem_force ) {\n\t\t\t\t\n\t\t\t\tif( next === undefined ) {\n\t\t\t\t\t\n\t\t\t\t\tconst cache = get_cache( this )\n\t\t\t\t\tif( force === $mol_mem_force_cache ) cache.obsolete( Number.NaN )\n\t\t\t\t\t\n\t\t\t\t\tif( $mol_atom2.current ) return cache.get()\n\t\t\t\t\telse return $mol_fiber.run( ()=> cache.get() )\n\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn $mol_fiber.run( ()=> {\n\t\t\t\t\tif( force === $mol_mem_force_fail ) return get_cache( this ).fail( next as any )\n\t\t\t\t\tif( force !== $mol_mem_force_cache ) next = value.call( this , next )\n\t\t\t\t\treturn get_cache( this ).put( next )\n\t\t\t\t} )\n\t\t\t\t\n\t\t\t}\n\n\t\t}\n\n\t}\n\t\n}\n","namespace $ {\n\t$mol_test( {\n\n\t\t'Property method' () {\n\n\t\t\tclass App extends $mol_object2 {\n\n\t\t\t\t@ $mol_mem\n\t\t\t\tstatic value( next = 1 ) { return next + 1 }\n\n\t\t\t}\n\n\t\t\t$mol_assert_equal( App.value() , 2 )\n\n\t\t\tApp.value( 2 )\n\t\t\t$mol_assert_equal( App.value() , 3 )\n\n\t\t} ,\n\n\t\t'auto sync of properties'() {\n\n\t\t\tclass X extends $mol_object2 {\n\n\t\t\t\t@ $mol_mem\n\t\t\t\tfoo( next? : number ) {\n\t\t\t\t\treturn next || 1\n\t\t\t\t}\n\n\t\t\t\t@ $mol_mem\n\t\t\t\tbar() {\n\t\t\t\t\treturn this.foo() + 1\n\t\t\t\t}\n\n\t\t\t\t@ $mol_mem\n\t\t\t\txxx() {\n\t\t\t\t\treturn this.bar() + 1\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst x = new X\n\t\t\t$mol_assert_equal( x.bar() , 2 )\n\t\t\t$mol_assert_equal( x.xxx() , 3 )\n\n\t\t\tx.foo( 5 )\n\t\t\t$mol_assert_equal( x.xxx() , 7 )\n\t\t} ,\n\n\t\t// 'must fail on recursive dependency'() {\n\t\t\n\t\t// \tclass App extends $mol_object {\n\t\t\n\t\t// \t\t@ $mol_mem\n\t\t// \t\tstatic foo() : number {\n\t\t// \t\t\treturn this.foo() + 1\n\t\t// \t\t}\n\t\t\n\t\t// \t}\n\t\t\n\t\t// \t$mol_assert_fail( ()=> App.foo() )\n\n\t\t// } ,\n\n\t\tasync 'must be deferred destroyed when no longer referenced'() {\n\n\t\t\tlet foo : any\n\t\t\tlet foo_destroyed = false\n\n\t\t\tclass B extends $mol_object2 {\n\n\t\t\t\t@ $mol_mem\n\t\t\t\tshowing( next? : boolean ) {\n\t\t\t\t\tif( next === void 0 ) return true\n\t\t\t\t\treturn next\n\t\t\t\t}\n\n\t\t\t\t@ $mol_mem\n\t\t\t\tfoo() {\n\t\t\t\t\treturn foo = new class extends $mol_object {\n\t\t\t\t\t\tdestructor() {\n\t\t\t\t\t\t\tfoo_destroyed = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t@ $mol_mem\n\t\t\t\tbar() {\n\t\t\t\t\treturn this.showing() ? this.foo() : null\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar b = new B\n\n\t\t\tvar bar = b.bar()\n\t\t\t$mol_assert_ok( bar )\n\n\t\t\tb.showing( false )\n\t\t\tb.bar()\n\n\t\t\tawait $mol_fiber_warp()\n\t\t\t$mol_assert_ok( foo_destroyed )\n\t\t\t$mol_assert_not( b.bar() )\n\n\t\t\tb.showing( true )\n\t\t\t$mol_defer.run()\n\t\t\t$mol_assert_unique( b.bar() , bar )\n\t\t} ,\n\n\t\tasync 'wait for data'() {\n\n\t\t\tclass Test extends $mol_object2 {\n\n\t\t\t\t@ $mol_mem\n\t\t\t\tsource() : string {\n\t\t\t\t\treturn $mol_fiber_sync( ()=> new Promise< string >( done => done( 'Jin' ) ) )()\n\t\t\t\t}\n\n\t\t\t\t@ $mol_mem\n\t\t\t\tmiddle() {\n\t\t\t\t\treturn this.source()\n\t\t\t\t}\n\n\t\t\t\t@ $mol_mem\n\t\t\t\ttarget() {\n\t\t\t\t\treturn this.middle()\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst t = new Test\n\n\t\t\t$mol_assert_fail( ()=> t.target().valueOf() , Promise )\n\n\t\t\tawait $mol_fiber_warp()\n\n\t\t\t$mol_assert_equal( t.target() , 'Jin' )\n\t\t} ,\n\n\t} )\n\n}\n","namespace $ { \n\texport function $mol_const< Value >( value : Value ) {\n\t\tvar getter = <{ () : Value , '()' : Value }> ( () => value )\n\t\tgetter['()'] = value\n\t\tgetter[ Symbol.toStringTag ] = value\n\t\treturn getter\n\t}\n}\n","namespace $ {\n\t$mol_test( { \n\t\t\n\t\t'const returns stored value'() {\n\t\t\n\t\t\tconst foo = { bar : $mol_const( Math.random() ) }\n\t\t\t\n\t\t\t$mol_assert_equal( foo.bar() , foo.bar() )\n\t\t\t$mol_assert_equal( foo.bar() , foo.bar['()'] )\n\t\t\t\n\t\t} ,\n\n\t} )\n}\n","namespace $ {\n\n\texport function $mol_atom2_field<\n\t\tHost extends object ,\n\t\tField extends keyof Host ,\n\t\tValue extends Host[ Field ]\n\t>(\n\t\tproto : Host ,\n\t\tname : Field ,\n\t\tdescr? : TypedPropertyDescriptor< Value >\n\t) : any {\n\t\t\n\t\tif( !descr ) descr =  Object.getOwnPropertyDescriptor( proto , name )\n\n\t\tconst get = descr ? ( descr.get || $mol_const( descr.value! ) ) : ( ()=> undefined as unknown as Value )\n\t\tconst set = descr && descr.set || function( this : Host , next ) { get_cache( this ).put( next ) }\n\t\t\n\t\tconst store = new WeakMap< Host , $mol_atom2< Value > >()\n\n\t\tObject.defineProperty( proto , name + \"@\" , {\n\t\t\tget : function() {\n\t\t\t\treturn store.get( this )\n\t\t\t}\n\t\t} )\n\n\t\tconst get_cache = ( host : Host )=> {\n\t\t\t\n\t\t\tlet cache = store.get( host )\n\t\t\t\n\t\t\tif( !cache ) {\n\t\t\t\tcache = new $mol_atom2\n\t\t\t\tcache.calculate = get.bind( host )\n\t\t\t\tcache[ Symbol.toStringTag ] = `${ host }.${ name }`\n\t\t\t\tcache.abort = ()=> {\n\t\t\t\t\tstore.delete( host )\n\t\t\t\t\tcache!.forget()\n\t\t\t\t\treturn true\n\t\t\t\t}\n\t\t\t\tstore.set( host , cache )\n\t\t\t}\n\n\t\t\treturn cache!\n\t\t}\n\n\t\treturn {\n\t\t\t\n\t\t\tget() {\n\t\t\t\treturn get_cache( this ).get()\n\t\t\t},\n\n\t\t\tset ,\n\n\t\t\t// set( next : Value ) {\n\t\t\t\t\n\t\t\t\t// const slave = $mol_fiber.current \n\n\t\t\t\t// let master = slave && slave.master as $mol_fiber< void >\n\t\t\t\t// if( !master ) {\n\t\t\t\t// \tmaster = new $mol_fiber\n\t\t\t\t// \tmaster.calculate = ()=> {\n\t\t\t\t\t\t// set.call( this , next )\n\t\t\t\t// \t}\n\t\t\t\t// \tmaster[ Symbol.toStringTag ] = `${ this }.${ name }=`\n\t\t\t\t// }\n\n\t\t\t\t// master.get()\n\n\t\t\t// }\n\n\t\t}\n\n\t}\n\n}\n","namespace $ {\n\n\texport function $mol_atom2_autorun( calculate : ()=> any ) {\n\t\t\n\t\treturn $mol_atom2.create( atom => {\n\t\t\tatom.calculate = calculate\n\t\t\tatom.obsolete_slaves = atom.schedule\n\t\t\tatom.doubt_slaves = atom.schedule\n\t\t\tatom[ Symbol.toStringTag ] = calculate[ Symbol.toStringTag ] || calculate.name || '$mol_atom2_autorun'\n\t\t\tatom.schedule()\n\t\t} )\n\n\t}\n\n}\n","namespace $ {\n\n\t$mol_test({\n\n\t\tasync 'Autorun' () {\n\n\t\t\tclass App extends $mol_object2 {\n\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic state = 1\n\t\t\t\t\n\t\t\t\tstatic counter = 0\n\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic get init() {\n\t\t\t\t\t++ this.counter\n\t\t\t\t\treturn this.state\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst autorun = $mol_atom2_autorun( ()=> App.init )\n\n\t\t\ttry {\n\n\t\t\t\tawait $mol_fiber_warp()\n\t\t\t\t$mol_assert_equal( App.counter , 1 )\n\t\t\t\t\n\t\t\t\tApp.state = 2\n\t\t\t\t$mol_assert_equal( App.counter , 1 )\n\n\t\t\t\tawait $mol_fiber_warp()\n\t\t\t\t$mol_assert_equal( App.counter , 2 )\n\t\t\t\t\n\t\t\t\tApp.state = 3\n\n\t\t\t} finally {\n\t\t\t\tautorun.destructor()\n\t\t\t}\n\n\t\t\tApp.state = 4\n\t\t\tawait $mol_fiber_warp()\n\t\t\t$mol_assert_equal( App.counter , 2 )\n\n\t\t} ,\n\n\t})\n\n}\n","/** @jsx $mol_jsx_make */\nnamespace $ {\n\t\n\t$mol_test({\n\t\t\n\t\t'Class as component'() {\n\n\t\t\tclass Foo extends $mol_jsx_view {\n\n\t\t\t\ttitle = ''\n\t\t\t\t\n\t\t\t\trender() {\n\t\t\t\t\treturn <div>{ this.title } { this.childNodes.join( '-' ) }</div>\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst dom = <Foo id=\"/foo\" title=\"bar\">xxx{123}</Foo>\n\n\t\t\t$mol_assert_equal( dom.outerHTML , '<div id=\"/foo\">bar xxx-123</div>' )\n\t\t\t\n\t\t} ,\n\t\t\n\t\t'View by element'() {\n\n\t\t\tclass Br extends $mol_jsx_view {\n\n\t\t\t\trender() {\n\t\t\t\t\tview = this\n\t\t\t\t\treturn <br id=\"/foo\" />\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tlet view! : Br\n\n\t\t\t$mol_assert_equal( Br.of( <Br /> ) , view )\n\t\t\t\n\t\t} ,\n\t\t\n\t\t'Attached view rerender'() {\n\n\t\t\tconst doc = $mol_dom_parse( '<html><body id=\"/foo\"></body></html>' )\n\t\t\t\n\t\t\tclass Title extends $mol_jsx_view {\n\n\t\t\t\tvalue = 'foo'\n\t\t\t\t\n\t\t\t\trender() {\n\t\t\t\t\treturn <div>{ this.value }</div>\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t\n\t\t\tconst dom = $mol_jsx_attach( doc , ()=> <Title id=\"/foo\" /> )\n\t\t\tconst title = Title.of( dom )\n\t\t\t\n\t\t\t$mol_assert_equal( title.ownerDocument , doc )\n\t\t\t$mol_assert_equal( doc.documentElement.outerHTML , '<html><body id=\"/foo\">foo</body></html>' )\n\t\t\t\n\t\t\ttitle.value = 'bar'\n\t\t\ttitle.valueOf()\n\t\t\t\n\t\t\t$mol_assert_equal( doc.documentElement.outerHTML , '<html><body id=\"/foo\">bar</body></html>' )\n\t\t\t\n\t\t} ,\n\t\t\n\t\tasync 'Reactive attached view'() {\n\n\t\t\tconst doc = $mol_dom_parse( '<html><body id=\"/foo\"></body></html>' )\n\t\t\t\n\t\t\tclass Task {\n\n\t\t\t\t@ $mol_mem\n\t\t\t\ttitle( next? : string ) { return next || 'foo' }\n\t\t\t\t\n\t\t\t}\n\n\t\t\tclass App extends $mol_jsx_view {\n\t\t\t\t\n\t\t\t\t@ $mol_mem\n\t\t\t\ttask() { return new Task }\n\n\t\t\t\t@ $mol_mem\n\t\t\t\tvalueOf() {\n\t\t\t\t\treturn super.valueOf()\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\trender() {\n\t\t\t\t\treturn <div>{ this.task().title() }</div>\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst task = new Task\n\n\t\t\t$mol_atom2_autorun( ()=> $mol_jsx_attach( doc , ()=> <App id=\"/foo\" task={ ()=> task } /> ) )\n\t\t\t\n\t\t\tawait $mol_fiber_warp()\n\t\t\t$mol_assert_equal( doc.documentElement.outerHTML , '<html><body id=\"/foo\">foo</body></html>' )\n\n\t\t\ttask.title( 'bar' )\n\t\t\tawait $mol_fiber_warp()\n\t\t\t$mol_assert_equal( doc.documentElement.outerHTML , '<html><body id=\"/foo\">bar</body></html>' )\n\t\t\t\n\t\t} ,\n\t\t\n\t})\n\t\n}\n",null,null,"namespace $ {\n\n\tconst a_stack = [] as any[]\n\tconst b_stack = [] as any[]\n\n\tlet cache = null as null | WeakMap< any , WeakMap< any , boolean > >\n\n\texport function $mol_compare_deep< Value >( a : Value , b : Value ) : boolean {\n\n\t\tif( Object.is( a , b ) ) return true\n\n\t\tconst a_type = typeof a\n\t\tconst b_type = typeof b\n\n\t\tif( a_type !== b_type ) return false\n\n\t\tif( a_type === 'function' ) return String( a ) === String( b )\n\t\tif( a_type !== 'object' ) return false\n\n\t\tif( !a || !b ) return false\n\n\t\tif( a instanceof Error ) return false\n\t\tif( a['constructor'] !== b['constructor'] ) return false\n\n\t\tif( a instanceof RegExp ) return Object.is( String( a ) , String( b ) )\n\n\t\tconst ref = a_stack.indexOf( a )\n\t\t\n\t\tif( ref >= 0 ) {\n\t\t\treturn Object.is( b_stack[ ref ] , b )\n\t\t}\n\n\t\tif( !cache ) cache = new WeakMap\n\n\t\tlet a_cache = cache.get( a )\n\t\tif( a_cache ) {\n\n\t\t\tconst b_cache = a_cache.get( b )\n\t\t\tif( typeof b_cache === 'boolean' ) return b_cache\n\n\t\t} else {\n\n\t\t\ta_cache = new WeakMap< any , boolean >()\n\t\t\tcache.set( a , a_cache )\n\n\t\t}\n\n\t\ta_stack.push( a )\n\t\tb_stack.push( b )\n\n\t\tlet result! : boolean\n\n\t\ttry {\n\n\t\t\tif( a[ Symbol.iterator ] ) {\n\t\t\t\t\n\t\t\t\tconst a_iter = a[ Symbol.iterator ]()\n\t\t\t\tconst b_iter = b[ Symbol.iterator ]()\n\t\n\t\t\t\twhile( true ) {\n\n\t\t\t\t\tconst a_next = a_iter.next()\n\t\t\t\t\tconst b_next = b_iter.next()\n\n\t\t\t\t\tif( a_next.done !== a_next.done ) return result = false\n\t\t\t\t\tif( a_next.done ) break\n\n\t\t\t\t\tif( !$mol_compare_deep( a_next.value , b_next.value ) ) return result = false\n\n\t\t\t\t}\n\n\t\t\t\treturn result = true\n\n\t\t\t}\n\n\t\t\tlet count = 0\n\n\t\t\tfor( let key in a ) {\n\n\t\t\t\ttry {\n\n\t\t\t\t\tif( !$mol_compare_deep( a[key] , b[key] ) ) return result = false\n\t\t\t\t\n\t\t\t\t} catch( error ) {\n\n\t\t\t\t\t$mol_fail_hidden( new $mol_error_mix( `Failed ${ JSON.stringify( key ) } fields comparison of ${a} and ${b}` , error ) )\n\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t++ count\n\n\t\t\t}\n\t\n\t\t\tfor( let key in b ) {\n\n\t\t\t\t--count\n\t\t\t\t\n\t\t\t\tif( count < 0 ) return result = false\n\t\t\t\t\n\t\t\t}\n\t\n\t\t\tconst a_val = a['valueOf']()\n\t\t\tif( Object.is( a_val , a ) ) return result = true\n\t\t\t\n\t\t\tconst b_val = b['valueOf']()\n\t\t\tif( !Object.is( a_val , b_val ) ) return result = false\n\n\t\t\treturn result = true\n\n\t\t} finally {\n\t\t\t\n\t\t\ta_stack.pop()\n\t\t\tb_stack.pop()\n\n\t\t\tif( a_stack.length === 0 ) {\n\t\t\t\tcache = null\n\t\t\t} else {\n\t\t\t\ta_cache.set( b , result )\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n","/** @jsx $mol_jsx_make */\nnamespace $ {\n\n\t$mol_test({\n\n\t\t'nulls & undefineds'() {\n\n\t\t\t$mol_assert_ok( $mol_compare_deep( null , null ) )\n\t\t\t$mol_assert_ok( $mol_compare_deep( undefined , undefined ) )\n\t\t\t\n\t\t\t$mol_assert_not( $mol_compare_deep( undefined , null ) )\n\t\t\t$mol_assert_not( $mol_compare_deep( {} , null ) )\n\t\t\t\n\t\t} ,\n\n\t\t'number'() {\n\t\t\t$mol_assert_ok( $mol_compare_deep( 1 , 1 ) )\n\t\t\t$mol_assert_ok( $mol_compare_deep( Number.NaN , Number.NaN ) )\n\t\t\t$mol_assert_not( $mol_compare_deep( 1 , 2 ) )\n\t\t} ,\n\n\t\t'Number'() {\n\t\t\t$mol_assert_ok( $mol_compare_deep( Object( 1 ) , Object( 1 ) ) )\n\t\t\t$mol_assert_ok( $mol_compare_deep( Object( Number.NaN ) , Object( Number.NaN ) ) )\n\t\t\t$mol_assert_not( $mol_compare_deep( Object( 1 ) , Object( 2 ) ) )\n\t\t} ,\n\n\t\t'empty POJOs'() {\n\t\t\t$mol_assert_ok( $mol_compare_deep( {} , {} ) )\n\t\t} ,\n\t\t\n\t\t'different POJOs'() {\n\t\t\t$mol_assert_not( $mol_compare_deep( { a : 1 } , { b : 2 } ) )\n\t\t} ,\n\n\t\t'different POJOs with same keys but different values'() {\n\t\t\t$mol_assert_not( $mol_compare_deep( { a : 1 } , { a : 2 } ) )\n\t\t} ,\n\n\t\t'different POJOs with different keys but same values'() {\n\t\t\t$mol_assert_not( $mol_compare_deep( {} , { a : undefined } ) )\n\t\t} ,\n\n\t\t'Array'() {\n\t\t\t$mol_assert_ok( $mol_compare_deep( [] , [] ) )\n\t\t\t$mol_assert_ok( $mol_compare_deep( [ 1 , [2] ] , [ 1 , [2] ] ) )\n\t\t\t$mol_assert_not( $mol_compare_deep( [ 1 , 2 ] , [ 1 , 3 ] ) )\n\t\t\t$mol_assert_not( $mol_compare_deep( [ 1 , 2 , ] , [ 1 , 3 , undefined ] ) )\n\t\t} ,\n\n\t\t'same POJO trees'() {\n\t\t\t$mol_assert_ok( $mol_compare_deep( { a : { b : 1 } } , { a : { b : 1 } } ) )\n\t\t} ,\n\n\t\t'different classes with same values'() {\n\n\t\t\tclass Obj { foo = 1 }\n\t\t\t\n\t\t\tconst a = new Obj\n\t\t\tconst b = new class extends Obj {}\n\t\t\t\n\t\t\t$mol_assert_not( $mol_compare_deep( a , b ) )\n\n\t\t} ,\n\n\t\t'same POJOs with cyclic reference'() {\n\n\t\t\tconst a = { foo : {} }\n\t\t\ta['self'] = a\n\n\t\t\tconst b = { foo : {} }\n\t\t\tb['self'] = b\n\n\t\t\t$mol_assert_ok( $mol_compare_deep( a , b ) )\n\n\t\t} ,\n\n\t\t'empty Element'() {\n\t\t\t$mol_assert_ok( $mol_compare_deep( <div /> , <div /> ) )\n\t\t\t$mol_assert_not( $mol_compare_deep( <div /> , <span /> ) )\n\t\t} ,\n\t\t\n\t\t'Element with attributes'() {\n\t\t\t$mol_assert_ok( $mol_compare_deep( <div dir=\"rtl\" /> , <div dir=\"rtl\" /> ) )\n\t\t\t$mol_assert_not( $mol_compare_deep( <div dir=\"rtl\" /> , <div /> ) )\n\t\t\t$mol_assert_not( $mol_compare_deep( <div dir=\"rtl\" /> , <div dir=\"ltr\" /> ) )\n\t\t} ,\n\t\t\n\t\t'Element with styles'() {\n\t\t\t$mol_assert_ok( $mol_compare_deep( <div style={{ color : 'red' }} /> , <div style={{ color : 'red' }} /> ) )\n\t\t\t$mol_assert_not( $mol_compare_deep( <div style={{ color : 'red' }} /> , <div style={{ }} /> ) )\n\t\t\t$mol_assert_not( $mol_compare_deep( <div style={{ color : 'red' }} /> , <div style={{ color : 'blue' }} /> ) )\n\t\t} ,\n\t\t\n\t\t'Element with content'() {\n\t\t\t$mol_assert_ok( $mol_compare_deep( <div>foo<br/></div> , <div>foo<br/></div> ) )\n\t\t\t$mol_assert_not( $mol_compare_deep( <div>foo<br/></div> , <div>bar<br/></div> ) )\n\t\t\t$mol_assert_not( $mol_compare_deep( <div>foo<br/></div> , <div>foo<hr/></div> ) )\n\t\t} ,\n\t\t\n\t\t'Element with handlers'() {\n\t\t\t$mol_assert_ok( $mol_compare_deep( <div onclick={ ()=> 1 } /> , <div onclick={ ()=> 1 } /> ) )\n\t\t\t$mol_assert_not( $mol_compare_deep( <div onclick={ ()=> 1 } /> , <div onclick={ ()=> 2 } /> ) )\n\t\t} ,\n\t\t\n\t\t'Date'() {\n\t\t\t$mol_assert_ok( $mol_compare_deep( new Date( 12345 ) , new Date( 12345 ) ) )\n\t\t\t$mol_assert_not( $mol_compare_deep( new Date( 12345 ) , new Date( 12346 ) ) )\n\t\t} ,\n\n\t\t'RegExp'() {\n\t\t\t$mol_assert_ok( $mol_compare_deep( /\\x22/mig , /\\x22/mig ) )\n\t\t\t$mol_assert_not( $mol_compare_deep( /\\x22/mig , /\\x21/mig ) )\n\t\t\t$mol_assert_not( $mol_compare_deep( /\\x22/mig , /\\x22/mg ) )\n\t\t} ,\n\n\t\t'Map'() {\n\t\t\t$mol_assert_ok( $mol_compare_deep( new Map , new Map ) )\n\t\t\t$mol_assert_ok( $mol_compare_deep( new Map([ [ [1] , [2] ] ]) , new Map([ [ [1] , [2] ] ]) ) )\n\t\t\t$mol_assert_not( $mol_compare_deep( new Map([ [ 1 , 2 ] ]) , new Map([ [ 1 , 3 ] ]) ) )\n\t\t} ,\n\t\t\n\t\t'Set'() {\n\t\t\t$mol_assert_ok( $mol_compare_deep( new Set , new Set ) )\n\t\t\t$mol_assert_ok( $mol_compare_deep( new Set([ 1 , [2] ]) , new Set([ 1 , [2] ]) ) )\n\t\t\t$mol_assert_not( $mol_compare_deep( new Set([ 1 ]) , new Set([ 2 ]) ) )\n\t\t} ,\n\t\t\n\t\t'Uint8Array'() {\n\t\t\t$mol_assert_ok( $mol_compare_deep( new Uint8Array , new Uint8Array ) )\n\t\t\t$mol_assert_ok( $mol_compare_deep( new Uint8Array([ 0 ]) , new Uint8Array([ 0 ]) ) )\n\t\t\t$mol_assert_not( $mol_compare_deep( new Uint8Array([ 0 ]) , new Uint8Array([ 1 ]) ) )\n\t\t} ,\n\t\t\n\t})\n\n}\n","namespace $ {\n\n\texport function $mol_diff_path< Item >( ... paths : Item[][] ) {\n\n\t\tconst limit = Math.min( ... paths.map( path => path.length ) )\n\n\t\tlookup: for( var i = 0 ; i < limit ; ++i ) {\n\n\t\t\tconst first = paths[0][i]\n\n\t\t\tfor( let j = 1 ; j < paths.length ; ++j ) {\n\t\t\t\tif( paths[j][i] !== first ) break lookup\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\tprefix : paths[0].slice( 0 , i ) ,\n\t\t\tsuffix : paths.map( path => path.slice( i ) ) ,\n\t\t}\n\n\t}\n\n}\n","namespace $ {\n\n\t$mol_test({\n\n\t\t'equal paths' () {\n\n\t\t\tconst diff = $mol_diff_path( [1,2,3,4] , [1,2,3,4] , [1,2,3,4] )\n\t\t\t\n\t\t\t$mol_assert_like( diff , {\n\t\t\t\tprefix : [1,2,3,4] , \n\t\t\t\tsuffix : [ [] , [] , [] ] ,\n\t\t\t} )\n\n\t\t} ,\n\n\t\t'different suffix' () {\n\n\t\t\tconst diff = $mol_diff_path( [1,2,3,4] , [1,2,3,5] , [1,2,5,4] )\n\t\t\t\n\t\t\t$mol_assert_like( diff , {\n\t\t\t\tprefix : [1,2] , \n\t\t\t\tsuffix : [ [3,4] , [3,5] , [5,4] ] ,\n\t\t\t} )\n\n\t\t} ,\n\n\t\t'one contains other' () {\n\t\t\t\n\t\t\tconst diff = $mol_diff_path( [1,2,3,4] , [1,2] , [1,2,3] )\n\t\t\t\n\t\t\t$mol_assert_like( diff , {\n\t\t\t\tprefix : [1,2] , \n\t\t\t\tsuffix : [ [3,4] , [] , [3] ] ,\n\t\t\t} )\n\n\t\t} ,\n\n\t\t'fully different' () {\n\n\t\t\tconst diff = $mol_diff_path( [1,2] , [3,4] , [5,6] )\n\t\t\t\n\t\t\t$mol_assert_like( diff , {\n\t\t\t\tprefix : [] , \n\t\t\t\tsuffix : [ [1,2] , [3,4] , [5,6] ] ,\n\t\t\t} )\n\n\t\t} ,\n\n\t})\n\n}\n","namespace $ {\n\n\texport class $mol_error_mix extends Error {\n\n\t\terrors : Error[]\n\n\t\tconstructor( message : string , ... errors : Error[] ) {\n\n\t\t\tsuper( message )\n\t\t\t\n\t\t\tthis.errors = errors\n\n\t\t\tif( errors.length ) {\n\n\t\t\t\tconst stacks = [ ... errors.map( error => error.stack ) , this.stack ]\n\t\t\t\t\n\t\t\t\tconst diff = $mol_diff_path( ... stacks.map( stack => {\n\t\t\t\t\tif( !stack ) return []\n\t\t\t\t\treturn stack.split( '\\n' ).reverse()\n\t\t\t\t} ) )\n\t\t\t\t\n\t\t\t\tconst head = diff.prefix.reverse().join( '\\n' )\n\t\t\t\tconst tails = diff.suffix.map( path => path.reverse().map( line => line.replace( /^(?!\\s+at)/ , '\\tat (.) ' ) ).join( '\\n' ) ).join( '\\n\\tat (.) -----\\n' )\n\n\t\t\t\tthis.stack = `Error: ${ this.constructor.name }\\n\\tat (.) /\"\"\"\\\\\\n${ tails }\\n\\tat (.) \\\\___/\\n${ head }`\n\t\t\t\tthis.message += errors.map( error => '\\n' + error.message ).join( '' )\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n"]}